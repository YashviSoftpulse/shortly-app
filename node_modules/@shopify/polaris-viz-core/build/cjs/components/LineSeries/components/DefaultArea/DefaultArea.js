'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');
var jsxRuntime = require('react/jsx-runtime');
var uniqueId = require('../../../../utilities/uniqueId.js');
var usePolarisVizContext = require('../../../../hooks/usePolarisVizContext.js');
var LinearGradientWithStops = require('../../../LinearGradientWithStops/LinearGradientWithStops.js');

const GRADIENT_ALPHA = 0.25;
function DefaultArea({
  series: {
    areaColor
  },
  areaPath
}) {
  const gradientId = react.useMemo(() => uniqueId.uniqueId('default-area-gradient'), []);
  const maskId = react.useMemo(() => uniqueId.uniqueId('default-area-mask'), []);
  const {
    components: {
      Path,
      Defs,
      Mask
    },
    animated
  } = usePolarisVizContext.usePolarisVizContext();
  const AnimatedPath = animated(Path);

  if (areaPath == null || areaColor == null) {
    return null;
  }

  return /*#__PURE__*/jsxRuntime.jsxs(react.Fragment, {
    children: [/*#__PURE__*/jsxRuntime.jsxs(Defs, {
      children: [/*#__PURE__*/jsxRuntime.jsx(Mask, {
        id: maskId,
        children: /*#__PURE__*/jsxRuntime.jsx(AnimatedPath, {
          d: areaPath,
          fill: `url(#${maskId}-gradient)`
        })
      }), /*#__PURE__*/jsxRuntime.jsx(LinearGradientWithStops.LinearGradientWithStops, {
        id: `${maskId}-gradient`,
        x1: "0%",
        x2: "100%",
        y1: "0%",
        y2: "0%",
        gradient: [{
          offset: 0,
          color: 'black'
        }, {
          offset: 10,
          color: 'white'
        }, {
          offset: 90,
          color: 'white'
        }, {
          offset: 100,
          color: 'black'
        }]
      }), /*#__PURE__*/jsxRuntime.jsx(LinearGradientWithStops.LinearGradientWithStops, {
        id: gradientId,
        x1: "0%",
        x2: "0%",
        y1: "0%",
        y2: "100%",
        gradient: [{
          offset: 0,
          stopOpacity: GRADIENT_ALPHA,
          color: areaColor
        }, {
          offset: 100,
          stopOpacity: 0,
          color: areaColor
        }]
      })]
    }), /*#__PURE__*/jsxRuntime.jsx(AnimatedPath, {
      d: areaPath,
      fill: `url(#${gradientId})`,
      mask: `url(#${maskId})`,
      strokeWidth: "0",
      stroke: areaColor,
      style: {
        pointerEvents: 'none'
      }
    })]
  });
}

exports.DefaultArea = DefaultArea;
