'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');
var jsxRuntime = require('react/jsx-runtime');
var uniqueId = require('../../../../utilities/uniqueId.js');
var usePolarisVizContext = require('../../../../hooks/usePolarisVizContext.js');
var LinearGradientWithStops = require('../../../LinearGradientWithStops/LinearGradientWithStops.js');
var getGradientFromColor = require('../../../../utilities/getGradientFromColor.js');

function getGradientFill(color) {
  if (color == null) {
    return null;
  }

  return getGradientFromColor.getGradientFromColor(color);
}

const MASK_GRADIENT = [{
  offset: 20,
  color: 'white'
}, {
  offset: 100,
  color: 'black'
}];
function SparkArea({
  areaPath,
  color
}) {
  const gradientId = react.useMemo(() => uniqueId.uniqueId('spark-area-gradient'), []);
  const maskId = react.useMemo(() => uniqueId.uniqueId('spark-area-mask'), []);
  const areaGradientColor = getGradientFill(color);
  const {
    components: {
      Defs,
      Mask,
      Path
    },
    animated
  } = usePolarisVizContext.usePolarisVizContext();
  const AnimatedPath = animated(Path);
  return areaGradientColor == null ? null : /*#__PURE__*/jsxRuntime.jsxs(react.Fragment, {
    children: [/*#__PURE__*/jsxRuntime.jsxs(Defs, {
      children: [/*#__PURE__*/jsxRuntime.jsx(Mask, {
        id: maskId,
        children: /*#__PURE__*/jsxRuntime.jsx(AnimatedPath, {
          fill: `url(#${maskId}-gradient)`,
          d: areaPath
        })
      }), /*#__PURE__*/jsxRuntime.jsx(LinearGradientWithStops.LinearGradientWithStops, {
        id: `${maskId}-gradient`,
        y1: "0%",
        y2: "100%",
        gradient: MASK_GRADIENT
      }), /*#__PURE__*/jsxRuntime.jsx(LinearGradientWithStops.LinearGradientWithStops, {
        id: gradientId,
        y1: "100%",
        y2: "0%",
        gradient: areaGradientColor
      })]
    }), /*#__PURE__*/jsxRuntime.jsx(AnimatedPath, {
      d: areaPath,
      fill: `url(#${gradientId})`,
      mask: `url(#${maskId})`,
      opacity: "0.2"
    })]
  });
}

exports.SparkArea = SparkArea;
