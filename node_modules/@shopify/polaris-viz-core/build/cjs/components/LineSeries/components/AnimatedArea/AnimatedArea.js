'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');
var core = require('@react-spring/core');
var useSpringConfig = require('../../../../hooks/useSpringConfig.js');
var constants = require('../../../../constants.js');
var jsxRuntime = require('react/jsx-runtime');
var Area = require('../Area/Area.js');

function AnimatedArea({
  immediate,
  fromData,
  toData,
  zeroLineData,
  delay,
  areaGenerator,
  type
}) {
  const mounted = react.useRef(false);
  const springConfig = useSpringConfig.useSpringConfig({
    shouldAnimate: !immediate,
    animationDelay: immediate ? 0 : delay,
    mountedSpringConfig: constants.LINES_TRANSITION_CONFIG,
    unmountedSpringConfig: constants.LINES_LOAD_ANIMATION_CONFIG
  });
  const {
    animatedLineShape
  } = core.useSpring({
    from: {
      animatedLineShape: areaGenerator(mounted.current ? fromData.data : zeroLineData)
    },
    to: {
      animatedLineShape: areaGenerator(toData.data)
    },
    ...springConfig
  });
  return /*#__PURE__*/jsxRuntime.jsx(Area.Area, {
    areaPath: animatedLineShape,
    series: toData,
    type: type
  });
}

exports.AnimatedArea = AnimatedArea;
