'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');
var _variables = require('./styles/shared/_variables.scss.js');
var createGradient = require('./utilities/createGradient.js');
var types = require('./types.js');

const LINE_HEIGHT = 14;
const FONT_SIZE = 11;
const FONT_FAMILY = 'Inter, -apple-system, "system-ui", "San Francisco", "Segoe UI", Roboto, "Helvetica Neue", sans-serif';
const XMLNS = 'http://www.w3.org/2000/svg';
const BASE_ANIMATION_DURATION = 200;
const LOAD_ANIMATION_DURATION = 500;
const SHAPE_ANIMATION_HEIGHT_BUFFER = 30;
const DEFAULT_BORDER_RADIUS = 3;
const BORDER_RADIUS = {
  None: '0 0 0 0',
  Top: `${DEFAULT_BORDER_RADIUS} ${DEFAULT_BORDER_RADIUS} 0 0`,
  Right: `0 ${DEFAULT_BORDER_RADIUS} ${DEFAULT_BORDER_RADIUS} 0`,
  Bottom: `0 0 ${DEFAULT_BORDER_RADIUS} ${DEFAULT_BORDER_RADIUS}`,
  Left: `${DEFAULT_BORDER_RADIUS} 0 0 ${DEFAULT_BORDER_RADIUS}`,
  All: `${DEFAULT_BORDER_RADIUS}`
};
const HORIZONTAL_BAR_LABEL_HEIGHT = 12;
const HORIZONTAL_BAR_LABEL_OFFSET = 10;
const HORIZONTAL_GROUP_LABEL_HEIGHT = 20;
const HORIZONTAL_SPACE_BETWEEN_SETS = 16;
const HORIZONTAL_SPACE_BETWEEN_SINGLE = 2;
const HORIZONTAL_SPACE_BETWEEN_CHART_AND_AXIS = 5;
const BAR_SPACING = 0.5;
const LINE_ANIMATION_FAST_DURATION = 100;
const LINE_ANIMATION_SLOW_DURATION = 325;
const LINE_ANIMATION_FAST_COUNT = 10;
const LINE_ANIMATION_DURATION_STEP = 25;
const DEFAULT_MAX_Y = 10;
const MIN_BAR_HEIGHT = 2;
const EMPTY_STATE_CHART_MIN = 0;
const EMPTY_STATE_CHART_MAX = 10;
exports.ChartMargin = void 0;

(function (ChartMargin) {
  ChartMargin[ChartMargin["Top"] = 5] = "Top";
  ChartMargin[ChartMargin["Left"] = 0] = "Left";
  ChartMargin[ChartMargin["Bottom"] = 24] = "Bottom";
  ChartMargin[ChartMargin["Right"] = 0] = "Right";
})(exports.ChartMargin || (exports.ChartMargin = {}));

const BARS_TRANSITION_CONFIG = {
  mass: 1,
  tension: 190,
  friction: 26
};
const BARS_SORT_TRANSITION_CONFIG = {
  mass: 1,
  tension: 150,
  friction: 20,
  restVelocity: 200
};
const BARS_LOAD_ANIMATION_CONFIG = {
  mass: 1,
  tension: 140,
  friction: 18
};
const AREAS_LOAD_ANIMATION_CONFIG = {
  mass: 1,
  tension: 120,
  friction: 20,
  clamp: true
};
const AREAS_TRANSITION_CONFIG = {
  mass: 1,
  tension: 190,
  friction: 26,
  clamp: true
};
const LINES_LOAD_ANIMATION_CONFIG = {
  mass: 1,
  tension: 140,
  friction: 18
};
const LINES_TRANSITION_CONFIG = {
  mass: 1,
  tension: 190,
  friction: 26
};
const ARC_LOAD_ANIMATION_CONFIG = {
  mass: 1,
  tension: 150,
  friction: 10
};
const ARC_DATA_CHANGE_ANIMATION_CONFIG = {
  mass: 1,
  tension: 150,
  friction: 20,
  restVelocity: 200
};
const MASK_HIGHLIGHT_COLOR = '#ffffff';
const COLOR_VARIABLES = _variables["default"];
const DEFAULT_THEME_NAME = 'Light';
const NEUTRAL_SINGLE_GRADIENT = [{
  offset: 0,
  color: _variables["default"].colorIndigo90
}, {
  offset: 85,
  color: _variables["default"].colorBlue90
}, {
  offset: 100,
  color: _variables["default"].colorBlue70
}];
const DEFAULT_CHART_BORDER_RADIUS = '0px';
const DEFAULT_CHART_PADDING = '0px';
const DEFAULT_SPARK_CHART_MIN_HEIGHT = 40;
const DEFAULT_CHART_MIN_HEIGHT = 200;
const DEFAULT_LINE_HAS_AREA = true;
const DEFAULT_LINE_HAS_SPLINE = true;
const DEFAULT_LINE_WIDTH = 2;
const DEFAULT_ARC_CORNER_RADIUS = 2;
const DEFAULT_ARC_CORNER_THICKNESS = 36;
const THIN_ARC_CORNER_THICKNESS = 12;
const DEFAULT_GRID_SHOW_HORIZONTAL_LINES = true;
const DEFAULT_GRID_HORIZONTAL_OVERFLOW = true;
const DEFAULT_GRID_VERTICAL_OVERFLOW = true;
const DEFAULT_GRID_HORIZONTAL_MARGIN = 16;
const DEFAULT_X_AXIS_HIDE = false;
const DEFAULT_GROUP_LABEL_HIDE = false;
const DEFAULT_CROSSHAIR_WIDTH = 1;
const TREND_POSITIVE = '#078d4e';
const TREND_NEGATIVE = '#616161';
const TREND_NEUTRAL = '#8a8a8a';
const DARK_THEME = {
  seriesColors: {
    empty: _variables["default"].colorGray140,
    comparison: _variables["default"].colorDarkComparison,
    single: NEUTRAL_SINGLE_GRADIENT,
    limited: [createGradient.createGradient(_variables["default"].colorIndigo70, _variables["default"].colorIndigo90), createGradient.createGradient(_variables["default"].colorBlue70, _variables["default"].colorBlue90), createGradient.createGradient(_variables["default"].colorMagenta70, _variables["default"].colorMagenta90), createGradient.createGradient(_variables["default"].colorTeal70, _variables["default"].colorTeal90), createGradient.createGradient(_variables["default"].colorPurple50, _variables["default"].colorPurple70), createGradient.createGradient(_variables["default"].colorOrange60, _variables["default"].colorOrange80), createGradient.createGradient(_variables["default"].colorYellow20, _variables["default"].colorYellow40)],
    all: [_variables["default"].colorTeal90, _variables["default"].colorBlue50, _variables["default"].colorIndigo90, _variables["default"].colorPurple70, _variables["default"].colorMagenta90, _variables["default"].colorOrange50, _variables["default"].colorYellow70, _variables["default"].colorTeal40, _variables["default"].colorBlue80, _variables["default"].colorIndigo40, _variables["default"].colorPurple90, _variables["default"].colorMagenta70, _variables["default"].colorOrange80, _variables["default"].colorYellow20]
  },
  tooltip: {
    backgroundColor: _variables["default"].colorGray150,
    textColor: _variables["default"].colorWhite,
    titleColor: _variables["default"].colorGray50
  },
  chartContainer: {
    backgroundColor: _variables["default"].colorGray160,
    borderRadius: DEFAULT_CHART_BORDER_RADIUS,
    minHeight: DEFAULT_CHART_MIN_HEIGHT,
    padding: DEFAULT_CHART_PADDING,
    sparkChartMinHeight: DEFAULT_SPARK_CHART_MIN_HEIGHT
  },
  line: {
    hasArea: DEFAULT_LINE_HAS_AREA,
    hasSpline: DEFAULT_LINE_HAS_SPLINE,
    width: DEFAULT_LINE_WIDTH,
    pointStroke: _variables["default"].colorGray160
  },
  arc: {
    cornerRadius: DEFAULT_ARC_CORNER_RADIUS,
    thickness: DEFAULT_ARC_CORNER_THICKNESS
  },
  bar: {
    zeroValueColor: _variables["default"].colorGray80,
    borderRadius: DEFAULT_BORDER_RADIUS
  },
  grid: {
    showHorizontalLines: DEFAULT_GRID_SHOW_HORIZONTAL_LINES,
    color: _variables["default"].colorGray140,
    horizontalOverflow: DEFAULT_GRID_HORIZONTAL_OVERFLOW,
    horizontalMargin: DEFAULT_GRID_HORIZONTAL_MARGIN,
    verticalOverflow: DEFAULT_GRID_VERTICAL_OVERFLOW
  },
  xAxis: {
    labelColor: _variables["default"].colorGray30,
    hide: DEFAULT_X_AXIS_HIDE
  },
  yAxis: {
    backgroundColor: _variables["default"].colorGray160,
    labelColor: _variables["default"].colorGray30
  },
  groupLabel: {
    hide: DEFAULT_GROUP_LABEL_HIDE
  },
  crossHair: {
    color: _variables["default"].colorGray70,
    width: DEFAULT_CROSSHAIR_WIDTH
  },
  legend: {
    valueColor: _variables["default"].colorGray70,
    labelColor: _variables["default"].colorGray30,
    backgroundColor: _variables["default"].colorGray150,
    trendIndicator: {
      positive: TREND_POSITIVE,
      negative: TREND_NEGATIVE,
      neutral: TREND_NEUTRAL
    }
  },
  annotations: {
    backgroundColor: _variables["default"].colorGray140,
    textColor: _variables["default"].colorGray30,
    titleColor: _variables["default"].colorWhite,
    linkColor: _variables["default"].colorBlue40,
    axisLabelColor: _variables["default"].colorGray80,
    lineColor: _variables["default"].colorGray80,
    pillOpacity: 0.6
  },
  trendIndicator: {
    positive: TREND_POSITIVE,
    negative: TREND_NEGATIVE,
    neutral: TREND_NEUTRAL
  },
  missingData: {
    lineColor: _variables["default"].colorGray130
  }
};
const LIGHT_BLUE = [{
  offset: 0,
  color: '#079EE1'
}, {
  offset: 100,
  color: '#2EB9F5'
}];
const INDIGO = [{
  offset: 0,
  color: '#6A42E9'
}, {
  offset: 100,
  color: '#8F71EF'
}];
const BLUE = [{
  offset: 0,
  color: '#3E69EA'
}, {
  offset: 100,
  color: '#7594F0'
}];
const MAGENTA = [{
  offset: 0,
  color: '#D147AC'
}, {
  offset: 100,
  color: '#DD76C1'
}];
const TEAL = [{
  offset: 0,
  color: '#1D9595'
}, {
  offset: 100,
  color: '#2CD2D2'
}];
const PURPLE = [{
  offset: 0,
  color: '#A249DF'
}, {
  offset: 100,
  color: '#BD7DE8'
}];
const LIGHT_BLUE_09_SOLID = 'rgba(19, 172, 240, 1)';
const INDIGO_10_SOLID = 'rgba(106, 66, 233, 1)';
const BLUE_08_SOLID = 'rgba(89, 126, 237, 1)';
const MAGENTA_10_SOLID = 'rgba(209, 71, 172, 1)';
const TEAL_12_SOLID = 'rgba(35, 186, 186, 1)';
const PURPLE_10_SOLID = 'rgba(155, 60, 221, 1)';
const INDIGIO_07_SOLID = 'rgba(158, 132, 242, 1)';
const LIGHT_BLUE_13_SOLID = 'rgba(18, 138, 192, 1)';
const MAGENTA_09_SOLID = 'rgba(215, 94, 183, 1)';
const BLUE_10_SOLID = 'rgba(48, 94, 232, 1)';
const PURPLE_08_SOLID = 'rgba(175, 99, 228, 1)';
const TEAL_10_SOLID = 'rgba(51, 219, 219, 1)';
const LIGHT_THEME = {
  seriesColors: {
    empty: _variables["default"].colorGray20,
    comparison: '#0A97D5',
    single: [{
      offset: 0,
      color: '#0A97D5'
    }, {
      offset: 100,
      color: '#50C3F7'
    }],
    limited: [LIGHT_BLUE, INDIGO, BLUE, MAGENTA, TEAL, PURPLE],
    all: [LIGHT_BLUE_09_SOLID, INDIGO_10_SOLID, BLUE_08_SOLID, MAGENTA_10_SOLID, TEAL_12_SOLID, PURPLE_10_SOLID, INDIGIO_07_SOLID, LIGHT_BLUE_13_SOLID, MAGENTA_09_SOLID, BLUE_10_SOLID, PURPLE_08_SOLID, TEAL_10_SOLID]
  },
  tooltip: {
    backgroundColor: _variables["default"].colorGray00,
    textColor: _variables["default"].colorGray160,
    titleColor: _variables["default"].colorGray100
  },
  chartContainer: {
    backgroundColor: _variables["default"].colorGray00,
    borderRadius: DEFAULT_CHART_BORDER_RADIUS,
    minHeight: DEFAULT_CHART_MIN_HEIGHT,
    padding: DEFAULT_CHART_PADDING,
    sparkChartMinHeight: DEFAULT_SPARK_CHART_MIN_HEIGHT
  },
  line: {
    hasArea: DEFAULT_LINE_HAS_AREA,
    hasSpline: DEFAULT_LINE_HAS_SPLINE,
    width: DEFAULT_LINE_WIDTH,
    pointStroke: _variables["default"].colorGray00
  },
  arc: {
    cornerRadius: DEFAULT_ARC_CORNER_RADIUS,
    thickness: DEFAULT_ARC_CORNER_THICKNESS
  },
  bar: {
    zeroValueColor: _variables["default"].colorGray70,
    borderRadius: DEFAULT_BORDER_RADIUS
  },
  grid: {
    showHorizontalLines: DEFAULT_GRID_SHOW_HORIZONTAL_LINES,
    color: _variables["default"].colorGray20,
    horizontalOverflow: DEFAULT_GRID_HORIZONTAL_OVERFLOW,
    horizontalMargin: DEFAULT_GRID_HORIZONTAL_MARGIN,
    verticalOverflow: DEFAULT_GRID_VERTICAL_OVERFLOW
  },
  xAxis: {
    labelColor: _variables["default"].colorGray100,
    hide: DEFAULT_X_AXIS_HIDE
  },
  yAxis: {
    backgroundColor: _variables["default"].colorGray00,
    labelColor: _variables["default"].colorGray100
  },
  groupLabel: {
    hide: DEFAULT_GROUP_LABEL_HIDE
  },
  crossHair: {
    color: _variables["default"].colorGray40,
    width: DEFAULT_CROSSHAIR_WIDTH
  },
  legend: {
    valueColor: _variables["default"].colorGray160,
    labelColor: _variables["default"].colorGray100,
    backgroundColor: null,
    trendIndicator: {
      positive: TREND_POSITIVE,
      negative: TREND_NEGATIVE,
      neutral: TREND_NEUTRAL
    }
  },
  annotations: {
    backgroundColor: _variables["default"].colorGray100,
    textColor: _variables["default"].colorWhite,
    titleColor: _variables["default"].colorWhite,
    linkColor: _variables["default"].colorBlue40,
    axisLabelColor: _variables["default"].colorGray70,
    lineColor: _variables["default"].colorGray70,
    pillOpacity: 1
  },
  trendIndicator: {
    positive: TREND_POSITIVE,
    negative: TREND_NEGATIVE,
    neutral: TREND_NEUTRAL
  },
  missingData: {
    lineColor: _variables["default"].colorGray40
  }
};
const PRINT_THEME = { ...LIGHT_THEME,
  seriesColors: {
    empty: _variables["default"].colorGray20,
    comparison: _variables["default"].colorLightComparison,
    single: _variables["default"].colorIndigo90,
    limited: [_variables["default"].colorIndigo70, _variables["default"].colorBlue70, _variables["default"].colorMagenta70, _variables["default"].colorTeal70, _variables["default"].colorPurple70, _variables["default"].colorOrange70, _variables["default"].colorYellow70],
    all: [_variables["default"].colorTeal90, _variables["default"].colorBlue70, _variables["default"].colorIndigo90, _variables["default"].colorPurple70, _variables["default"].colorMagenta90, _variables["default"].colorOrange80, _variables["default"].colorYellow50, _variables["default"].colorTeal70, _variables["default"].colorBlue80, _variables["default"].colorIndigo70, _variables["default"].colorPurple90, _variables["default"].colorMagenta70, _variables["default"].colorOrange110, _variables["default"].colorYellow70]
  }
};
const STACKED_BAR_GAP = 2;
const COLOR_VISION_ACTIVE_OPACITY = 1;
const COLOR_VISION_FADED_OPACITY = 0.3;
const COLOR_VISION_SINGLE_ITEM = 'singleItem';
const COLOR_VISION_GROUP_ITEM = 'group';
const EXTERNAL_EVENTS_SET_HIDDEN_ITEMS = 'setHiddenItems';
const LEGENDS_TOP_MARGIN = 16;
const LEGENDS_BOTTOM_MARGIN = 16;
const Y_AXIS_CHART_SPACING = 20;
const LABEL_AREA_TOP_SPACING = 16;
const ELLIPSIS = '…';
const HORIZONTAL_LABEL_MIN_WIDTH = 46;
const HORIZONTAL_LABEL_TARGET_HEIGHT = 80;
const DIAGONAL_LABEL_MIN_WIDTH = 30;
const MAX_DIAGONAL_LABEL_WIDTH = 100; // Visible height of a 100px wide label at 45deg

const MAX_DIAGONAL_VISIBLE_HEIGHT = 80;
const VERTICAL_LABEL_TARGET_WIDTH = 80;
const VERTICAL_LABEL_MIN_WIDTH = 14;
const DEFAULT_COMPONENTS = {
  Svg: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('svg', props, children),
  Circle: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('circle', props, children),
  Ellipse: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('ellipse', props, children),
  // eslint-disable-next-line id-length
  G: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('g', props, children),
  Text: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('text', props, children),
  TSpan: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('tSpan', props, children),
  TextPath: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('textPath', props, children),
  Path: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('path', props, children),
  Polygon: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('polygon', props, children),
  Polyline: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('polyline', props, children),
  Line: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('line', props, children),
  Rect: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('rect', props, children),
  Use: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('use', props, children),
  Image: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('image', props, children),
  Symbol: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('symbol', props, children),
  Defs: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('defs', props, children),
  LinearGradient: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('linearGradient', props, children),
  RadialGradient: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('radialGradient', props, children),
  Stop: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('stop', props, children),
  ClipPath: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('clipPath', props, children),
  Pattern: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('pattern', props, children),
  Mask: ({
    children,
    ...props
  }) => /*#__PURE__*/react.createElement('mask', props, children)
};
const STROKE_WIDTH = 1.5;
const STROKE_DOT_ARRAY_WIDTH = '0.1 4';
const ANIMATION_MARGIN = 17;
const LINEAR_LABELS_INNER_PADDING = 10;
const COLOR_VISION_EVENT = {
  name: 'color-vision-event',
  dataAttribute: 'data-color-vision-event',
  camelCaseName: 'colorVisionEvent'
};
const DEFAULT_CHART_PROPS = {
  isAnimated: true,
  state: types.ChartState.Success,
  errorText: 'Could not load the chart'
};
const TOO_MANY_DATA_POINTS_THRESHOLD = {
  [types.InternalChartType.Bar]: 60,
  [types.InternalChartType.Line]: 150,
  [types.InternalChartType.Combo]: 60
};
const TOO_MANY_DATA_SERIES_THRESHOLD = 14;
const LINE_SERIES_POINT_RADIUS = 2;
const HUES = {
  [types.Hue.Teal]: [_variables["default"].colorTeal00, _variables["default"].colorTeal10, _variables["default"].colorTeal20, _variables["default"].colorTeal30, _variables["default"].colorTeal40, _variables["default"].colorTeal50, _variables["default"].colorTeal60, _variables["default"].colorTeal70, _variables["default"].colorTeal80, _variables["default"].colorTeal90, _variables["default"].colorTeal100, _variables["default"].colorTeal110, _variables["default"].colorTeal120, _variables["default"].colorTeal130, _variables["default"].colorTeal140, _variables["default"].colorTeal150, _variables["default"].colorTeal160],
  [types.Hue.Blue]: [_variables["default"].colorBlue00, _variables["default"].colorBlue10, _variables["default"].colorBlue20, _variables["default"].colorBlue30, _variables["default"].colorBlue40, _variables["default"].colorBlue50, _variables["default"].colorBlue60, _variables["default"].colorBlue70, _variables["default"].colorBlue80, _variables["default"].colorBlue90, _variables["default"].colorBlue100, _variables["default"].colorBlue110, _variables["default"].colorBlue120, _variables["default"].colorBlue130, _variables["default"].colorBlue140, _variables["default"].colorBlue150, _variables["default"].colorBlue160],
  [types.Hue.Indigo]: [_variables["default"].colorIndigo00, _variables["default"].colorIndigo10, _variables["default"].colorIndigo20, _variables["default"].colorIndigo30, _variables["default"].colorIndigo40, _variables["default"].colorIndigo50, _variables["default"].colorIndigo60, _variables["default"].colorIndigo70, _variables["default"].colorIndigo80, _variables["default"].colorIndigo90, _variables["default"].colorIndigo100, _variables["default"].colorIndigo110, _variables["default"].colorIndigo120, _variables["default"].colorIndigo130, _variables["default"].colorIndigo140, _variables["default"].colorIndigo150, _variables["default"].colorIndigo160],
  [types.Hue.Purple]: [_variables["default"].colorPurple00, _variables["default"].colorPurple10, _variables["default"].colorPurple20, _variables["default"].colorPurple30, _variables["default"].colorPurple40, _variables["default"].colorPurple50, _variables["default"].colorPurple60, _variables["default"].colorPurple70, _variables["default"].colorPurple80, _variables["default"].colorPurple90, _variables["default"].colorPurple100, _variables["default"].colorPurple110, _variables["default"].colorPurple120, _variables["default"].colorPurple130, _variables["default"].colorPurple140, _variables["default"].colorPurple150, _variables["default"].colorPurple160],
  [types.Hue.Magenta]: [_variables["default"].colorMagenta00, _variables["default"].colorMagenta10, _variables["default"].colorMagenta20, _variables["default"].colorMagenta30, _variables["default"].colorMagenta40, _variables["default"].colorMagenta50, _variables["default"].colorMagenta60, _variables["default"].colorMagenta70, _variables["default"].colorMagenta80, _variables["default"].colorMagenta90, _variables["default"].colorMagenta100, _variables["default"].colorMagenta110, _variables["default"].colorMagenta120, _variables["default"].colorMagenta130, _variables["default"].colorMagenta140, _variables["default"].colorMagenta150, _variables["default"].colorMagenta160],
  [types.Hue.Orange]: [_variables["default"].colorOrange00, _variables["default"].colorOrange10, _variables["default"].colorOrange20, _variables["default"].colorOrange30, _variables["default"].colorOrange40, _variables["default"].colorOrange50, _variables["default"].colorOrange60, _variables["default"].colorOrange70, _variables["default"].colorOrange80, _variables["default"].colorOrange90, _variables["default"].colorOrange100, _variables["default"].colorOrange110, _variables["default"].colorOrange120, _variables["default"].colorOrange130, _variables["default"].colorOrange140, _variables["default"].colorOrange150, _variables["default"].colorOrange160],
  [types.Hue.Yellow]: [_variables["default"].colorYellow00, _variables["default"].colorYellow10, _variables["default"].colorYellow20, _variables["default"].colorYellow30, _variables["default"].colorYellow40, _variables["default"].colorYellow50, _variables["default"].colorYellow60, _variables["default"].colorYellow70, _variables["default"].colorYellow80, _variables["default"].colorYellow90, _variables["default"].colorYellow100, _variables["default"].colorYellow110, _variables["default"].colorYellow120, _variables["default"].colorYellow130, _variables["default"].colorYellow140, _variables["default"].colorYellow150, _variables["default"].colorYellow160]
};

exports.ANIMATION_MARGIN = ANIMATION_MARGIN;
exports.ARC_DATA_CHANGE_ANIMATION_CONFIG = ARC_DATA_CHANGE_ANIMATION_CONFIG;
exports.ARC_LOAD_ANIMATION_CONFIG = ARC_LOAD_ANIMATION_CONFIG;
exports.AREAS_LOAD_ANIMATION_CONFIG = AREAS_LOAD_ANIMATION_CONFIG;
exports.AREAS_TRANSITION_CONFIG = AREAS_TRANSITION_CONFIG;
exports.BARS_LOAD_ANIMATION_CONFIG = BARS_LOAD_ANIMATION_CONFIG;
exports.BARS_SORT_TRANSITION_CONFIG = BARS_SORT_TRANSITION_CONFIG;
exports.BARS_TRANSITION_CONFIG = BARS_TRANSITION_CONFIG;
exports.BAR_SPACING = BAR_SPACING;
exports.BASE_ANIMATION_DURATION = BASE_ANIMATION_DURATION;
exports.BORDER_RADIUS = BORDER_RADIUS;
exports.COLOR_VARIABLES = COLOR_VARIABLES;
exports.COLOR_VISION_ACTIVE_OPACITY = COLOR_VISION_ACTIVE_OPACITY;
exports.COLOR_VISION_EVENT = COLOR_VISION_EVENT;
exports.COLOR_VISION_FADED_OPACITY = COLOR_VISION_FADED_OPACITY;
exports.COLOR_VISION_GROUP_ITEM = COLOR_VISION_GROUP_ITEM;
exports.COLOR_VISION_SINGLE_ITEM = COLOR_VISION_SINGLE_ITEM;
exports.DARK_THEME = DARK_THEME;
exports.DEFAULT_BORDER_RADIUS = DEFAULT_BORDER_RADIUS;
exports.DEFAULT_CHART_PROPS = DEFAULT_CHART_PROPS;
exports.DEFAULT_COMPONENTS = DEFAULT_COMPONENTS;
exports.DEFAULT_MAX_Y = DEFAULT_MAX_Y;
exports.DEFAULT_THEME_NAME = DEFAULT_THEME_NAME;
exports.DIAGONAL_LABEL_MIN_WIDTH = DIAGONAL_LABEL_MIN_WIDTH;
exports.ELLIPSIS = ELLIPSIS;
exports.EMPTY_STATE_CHART_MAX = EMPTY_STATE_CHART_MAX;
exports.EMPTY_STATE_CHART_MIN = EMPTY_STATE_CHART_MIN;
exports.EXTERNAL_EVENTS_SET_HIDDEN_ITEMS = EXTERNAL_EVENTS_SET_HIDDEN_ITEMS;
exports.FONT_FAMILY = FONT_FAMILY;
exports.FONT_SIZE = FONT_SIZE;
exports.HORIZONTAL_BAR_LABEL_HEIGHT = HORIZONTAL_BAR_LABEL_HEIGHT;
exports.HORIZONTAL_BAR_LABEL_OFFSET = HORIZONTAL_BAR_LABEL_OFFSET;
exports.HORIZONTAL_GROUP_LABEL_HEIGHT = HORIZONTAL_GROUP_LABEL_HEIGHT;
exports.HORIZONTAL_LABEL_MIN_WIDTH = HORIZONTAL_LABEL_MIN_WIDTH;
exports.HORIZONTAL_LABEL_TARGET_HEIGHT = HORIZONTAL_LABEL_TARGET_HEIGHT;
exports.HORIZONTAL_SPACE_BETWEEN_CHART_AND_AXIS = HORIZONTAL_SPACE_BETWEEN_CHART_AND_AXIS;
exports.HORIZONTAL_SPACE_BETWEEN_SETS = HORIZONTAL_SPACE_BETWEEN_SETS;
exports.HORIZONTAL_SPACE_BETWEEN_SINGLE = HORIZONTAL_SPACE_BETWEEN_SINGLE;
exports.HUES = HUES;
exports.LABEL_AREA_TOP_SPACING = LABEL_AREA_TOP_SPACING;
exports.LEGENDS_BOTTOM_MARGIN = LEGENDS_BOTTOM_MARGIN;
exports.LEGENDS_TOP_MARGIN = LEGENDS_TOP_MARGIN;
exports.LIGHT_THEME = LIGHT_THEME;
exports.LINEAR_LABELS_INNER_PADDING = LINEAR_LABELS_INNER_PADDING;
exports.LINES_LOAD_ANIMATION_CONFIG = LINES_LOAD_ANIMATION_CONFIG;
exports.LINES_TRANSITION_CONFIG = LINES_TRANSITION_CONFIG;
exports.LINE_ANIMATION_DURATION_STEP = LINE_ANIMATION_DURATION_STEP;
exports.LINE_ANIMATION_FAST_COUNT = LINE_ANIMATION_FAST_COUNT;
exports.LINE_ANIMATION_FAST_DURATION = LINE_ANIMATION_FAST_DURATION;
exports.LINE_ANIMATION_SLOW_DURATION = LINE_ANIMATION_SLOW_DURATION;
exports.LINE_HEIGHT = LINE_HEIGHT;
exports.LINE_SERIES_POINT_RADIUS = LINE_SERIES_POINT_RADIUS;
exports.LOAD_ANIMATION_DURATION = LOAD_ANIMATION_DURATION;
exports.MASK_HIGHLIGHT_COLOR = MASK_HIGHLIGHT_COLOR;
exports.MAX_DIAGONAL_LABEL_WIDTH = MAX_DIAGONAL_LABEL_WIDTH;
exports.MAX_DIAGONAL_VISIBLE_HEIGHT = MAX_DIAGONAL_VISIBLE_HEIGHT;
exports.MIN_BAR_HEIGHT = MIN_BAR_HEIGHT;
exports.NEUTRAL_SINGLE_GRADIENT = NEUTRAL_SINGLE_GRADIENT;
exports.PRINT_THEME = PRINT_THEME;
exports.SHAPE_ANIMATION_HEIGHT_BUFFER = SHAPE_ANIMATION_HEIGHT_BUFFER;
exports.STACKED_BAR_GAP = STACKED_BAR_GAP;
exports.STROKE_DOT_ARRAY_WIDTH = STROKE_DOT_ARRAY_WIDTH;
exports.STROKE_WIDTH = STROKE_WIDTH;
exports.THIN_ARC_CORNER_THICKNESS = THIN_ARC_CORNER_THICKNESS;
exports.TOO_MANY_DATA_POINTS_THRESHOLD = TOO_MANY_DATA_POINTS_THRESHOLD;
exports.TOO_MANY_DATA_SERIES_THRESHOLD = TOO_MANY_DATA_SERIES_THRESHOLD;
exports.VERTICAL_LABEL_MIN_WIDTH = VERTICAL_LABEL_MIN_WIDTH;
exports.VERTICAL_LABEL_TARGET_WIDTH = VERTICAL_LABEL_TARGET_WIDTH;
exports.XMLNS = XMLNS;
exports.Y_AXIS_CHART_SPACING = Y_AXIS_CHART_SPACING;
