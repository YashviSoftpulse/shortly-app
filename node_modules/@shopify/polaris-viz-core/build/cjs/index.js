'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var constants = require('./constants.js');
var types = require('./types.js');
var clamp = require('./utilities/clamp.js');
var createGradient = require('./utilities/createGradient.js');
var createThemes = require('./utilities/createThemes.js');
var curveStepRounded = require('./utilities/curveStepRounded.js');
var getAnimationTrail = require('./utilities/getAnimationTrail.js');
var getFilteredSeries = require('./utilities/getFilteredSeries.js');
var getSeriesColors = require('./utilities/getSeriesColors.js');
var isGradientType = require('./utilities/isGradientType.js');
var uniqueId = require('./utilities/uniqueId.js');
var paddingStringToObject = require('./utilities/paddingStringToObject.js');
var removeFalsyValues = require('./utilities/removeFalsyValues.js');
var estimateStringWidth = require('./utilities/estimateStringWidth.js');
var shouldRoundScaleUp = require('./utilities/shouldRoundScaleUp.js');
var getColorVisionEventAttrs = require('./utilities/getColorVisionEventAttrs.js');
var getColorVisionStylesForActiveIndex = require('./utilities/getColorVisionStylesForActiveIndex.js');
var getRoundedRectPath = require('./utilities/getRoundedRectPath.js');
var changeColorOpacity = require('./utilities/changeColorOpacity.js');
var getAverageColor = require('./utilities/getAverageColor.js');
var getValueFromXScale = require('./utilities/getValueFromXScale.js');
var isValueWithinDomain = require('./utilities/isValueWithinDomain.js');
var getClosestDivisibleNumber = require('./utilities/getClosestDivisibleNumber.js');
var roundToDecimals = require('./utilities/roundToDecimals.js');
var isLargeDataSet = require('./utilities/isLargeDataSet.js');
var ColorScale = require('./utilities/ColorScale/ColorScale.js');
var isDataGroup = require('./utilities/isDataGroup.js');
var getGradientFromColor = require('./utilities/getGradientFromColor.js');
var OpacityScale = require('./utilities/OpacityScale/OpacityScale.js');
var useSparkBar = require('./hooks/useSparkBar.js');
var useSparkLine = require('./hooks/useSparkLine.js');
var useTheme = require('./hooks/useTheme.js');
var useThemeSeriesColors = require('./hooks/useThemeSeriesColors.js');
var usePolarisVizContext = require('./hooks/usePolarisVizContext.js');
var useYScale = require('./hooks/useYScale.js');
var useUniqueId = require('./hooks/useUniqueId.js');
var useAriaLabel = require('./hooks/useAriaLabel.js');
var useChartContext = require('./hooks/useChartContext.js');
var usePrevious = require('./hooks/usePrevious.js');
var useChartPositions = require('./hooks/useChartPositions.js');
var useSpringConfig = require('./hooks/useSpringConfig.js');
var Bar = require('./components/Bar/Bar.js');
var LineSeries = require('./components/LineSeries/LineSeries.js');
var LinearGradientWithStops = require('./components/LinearGradientWithStops/LinearGradientWithStops.js');
var PolarisVizProvider = require('./components/PolarisVizProvider/PolarisVizProvider.js');
var SparkBarSeries = require('./components/SparkBarSeries/SparkBarSeries.js');
var ChartContext = require('./contexts/ChartContext.js');



exports.ANIMATION_MARGIN = constants.ANIMATION_MARGIN;
exports.ARC_DATA_CHANGE_ANIMATION_CONFIG = constants.ARC_DATA_CHANGE_ANIMATION_CONFIG;
exports.ARC_LOAD_ANIMATION_CONFIG = constants.ARC_LOAD_ANIMATION_CONFIG;
exports.AREAS_LOAD_ANIMATION_CONFIG = constants.AREAS_LOAD_ANIMATION_CONFIG;
exports.AREAS_TRANSITION_CONFIG = constants.AREAS_TRANSITION_CONFIG;
exports.BARS_LOAD_ANIMATION_CONFIG = constants.BARS_LOAD_ANIMATION_CONFIG;
exports.BARS_SORT_TRANSITION_CONFIG = constants.BARS_SORT_TRANSITION_CONFIG;
exports.BARS_TRANSITION_CONFIG = constants.BARS_TRANSITION_CONFIG;
exports.BAR_SPACING = constants.BAR_SPACING;
exports.BASE_ANIMATION_DURATION = constants.BASE_ANIMATION_DURATION;
exports.BORDER_RADIUS = constants.BORDER_RADIUS;
exports.COLOR_VARIABLES = constants.COLOR_VARIABLES;
exports.COLOR_VISION_ACTIVE_OPACITY = constants.COLOR_VISION_ACTIVE_OPACITY;
exports.COLOR_VISION_EVENT = constants.COLOR_VISION_EVENT;
exports.COLOR_VISION_FADED_OPACITY = constants.COLOR_VISION_FADED_OPACITY;
exports.COLOR_VISION_GROUP_ITEM = constants.COLOR_VISION_GROUP_ITEM;
exports.COLOR_VISION_SINGLE_ITEM = constants.COLOR_VISION_SINGLE_ITEM;
Object.defineProperty(exports, 'ChartMargin', {
  enumerable: true,
  get: function () { return constants.ChartMargin; }
});
exports.DARK_THEME = constants.DARK_THEME;
exports.DEFAULT_BORDER_RADIUS = constants.DEFAULT_BORDER_RADIUS;
exports.DEFAULT_CHART_PROPS = constants.DEFAULT_CHART_PROPS;
exports.DEFAULT_COMPONENTS = constants.DEFAULT_COMPONENTS;
exports.DEFAULT_MAX_Y = constants.DEFAULT_MAX_Y;
exports.DEFAULT_THEME_NAME = constants.DEFAULT_THEME_NAME;
exports.DIAGONAL_LABEL_MIN_WIDTH = constants.DIAGONAL_LABEL_MIN_WIDTH;
exports.ELLIPSIS = constants.ELLIPSIS;
exports.EMPTY_STATE_CHART_MAX = constants.EMPTY_STATE_CHART_MAX;
exports.EMPTY_STATE_CHART_MIN = constants.EMPTY_STATE_CHART_MIN;
exports.EXTERNAL_EVENTS_SET_HIDDEN_ITEMS = constants.EXTERNAL_EVENTS_SET_HIDDEN_ITEMS;
exports.FONT_FAMILY = constants.FONT_FAMILY;
exports.FONT_SIZE = constants.FONT_SIZE;
exports.HORIZONTAL_BAR_LABEL_HEIGHT = constants.HORIZONTAL_BAR_LABEL_HEIGHT;
exports.HORIZONTAL_BAR_LABEL_OFFSET = constants.HORIZONTAL_BAR_LABEL_OFFSET;
exports.HORIZONTAL_GROUP_LABEL_HEIGHT = constants.HORIZONTAL_GROUP_LABEL_HEIGHT;
exports.HORIZONTAL_LABEL_MIN_WIDTH = constants.HORIZONTAL_LABEL_MIN_WIDTH;
exports.HORIZONTAL_LABEL_TARGET_HEIGHT = constants.HORIZONTAL_LABEL_TARGET_HEIGHT;
exports.HORIZONTAL_SPACE_BETWEEN_CHART_AND_AXIS = constants.HORIZONTAL_SPACE_BETWEEN_CHART_AND_AXIS;
exports.HORIZONTAL_SPACE_BETWEEN_SETS = constants.HORIZONTAL_SPACE_BETWEEN_SETS;
exports.HORIZONTAL_SPACE_BETWEEN_SINGLE = constants.HORIZONTAL_SPACE_BETWEEN_SINGLE;
exports.LABEL_AREA_TOP_SPACING = constants.LABEL_AREA_TOP_SPACING;
exports.LEGENDS_BOTTOM_MARGIN = constants.LEGENDS_BOTTOM_MARGIN;
exports.LEGENDS_TOP_MARGIN = constants.LEGENDS_TOP_MARGIN;
exports.LIGHT_THEME = constants.LIGHT_THEME;
exports.LINEAR_LABELS_INNER_PADDING = constants.LINEAR_LABELS_INNER_PADDING;
exports.LINES_LOAD_ANIMATION_CONFIG = constants.LINES_LOAD_ANIMATION_CONFIG;
exports.LINE_ANIMATION_DURATION_STEP = constants.LINE_ANIMATION_DURATION_STEP;
exports.LINE_ANIMATION_FAST_COUNT = constants.LINE_ANIMATION_FAST_COUNT;
exports.LINE_ANIMATION_FAST_DURATION = constants.LINE_ANIMATION_FAST_DURATION;
exports.LINE_ANIMATION_SLOW_DURATION = constants.LINE_ANIMATION_SLOW_DURATION;
exports.LINE_HEIGHT = constants.LINE_HEIGHT;
exports.LINE_SERIES_POINT_RADIUS = constants.LINE_SERIES_POINT_RADIUS;
exports.LOAD_ANIMATION_DURATION = constants.LOAD_ANIMATION_DURATION;
exports.MASK_HIGHLIGHT_COLOR = constants.MASK_HIGHLIGHT_COLOR;
exports.MAX_DIAGONAL_LABEL_WIDTH = constants.MAX_DIAGONAL_LABEL_WIDTH;
exports.MAX_DIAGONAL_VISIBLE_HEIGHT = constants.MAX_DIAGONAL_VISIBLE_HEIGHT;
exports.MIN_BAR_HEIGHT = constants.MIN_BAR_HEIGHT;
exports.NEUTRAL_SINGLE_GRADIENT = constants.NEUTRAL_SINGLE_GRADIENT;
exports.PRINT_THEME = constants.PRINT_THEME;
exports.SHAPE_ANIMATION_HEIGHT_BUFFER = constants.SHAPE_ANIMATION_HEIGHT_BUFFER;
exports.STACKED_BAR_GAP = constants.STACKED_BAR_GAP;
exports.STROKE_DOT_ARRAY_WIDTH = constants.STROKE_DOT_ARRAY_WIDTH;
exports.STROKE_WIDTH = constants.STROKE_WIDTH;
exports.THIN_ARC_CORNER_THICKNESS = constants.THIN_ARC_CORNER_THICKNESS;
exports.VERTICAL_LABEL_MIN_WIDTH = constants.VERTICAL_LABEL_MIN_WIDTH;
exports.VERTICAL_LABEL_TARGET_WIDTH = constants.VERTICAL_LABEL_TARGET_WIDTH;
exports.XMLNS = constants.XMLNS;
exports.Y_AXIS_CHART_SPACING = constants.Y_AXIS_CHART_SPACING;
Object.defineProperty(exports, 'ChartState', {
  enumerable: true,
  get: function () { return types.ChartState; }
});
Object.defineProperty(exports, 'DataType', {
  enumerable: true,
  get: function () { return types.DataType; }
});
Object.defineProperty(exports, 'InternalChartType', {
  enumerable: true,
  get: function () { return types.InternalChartType; }
});
exports.clamp = clamp.clamp;
exports.createGradient = createGradient.createGradient;
exports.createTheme = createThemes.createTheme;
exports.createThemes = createThemes.createThemes;
exports.curveStepRounded = curveStepRounded.curveStepRounded;
exports.getAnimationTrail = getAnimationTrail.getAnimationTrail;
exports.getFilteredSeries = getFilteredSeries.getFilteredSeries;
exports.getSeriesColors = getSeriesColors.getSeriesColors;
exports.isGradientType = isGradientType.isGradientType;
exports.uniqueId = uniqueId.uniqueId;
exports.paddingStringToObject = paddingStringToObject.paddingStringToObject;
exports.removeFalsyValues = removeFalsyValues.removeFalsyValues;
exports.estimateStringWidth = estimateStringWidth.estimateStringWidth;
exports.shouldRoundScaleUp = shouldRoundScaleUp.shouldRoundScaleUp;
exports.getColorVisionEventAttrs = getColorVisionEventAttrs.getColorVisionEventAttrs;
exports.getColorVisionStylesForActiveIndex = getColorVisionStylesForActiveIndex.getColorVisionStylesForActiveIndex;
exports.getRoundedRectPath = getRoundedRectPath.getRoundedRectPath;
exports.changeColorOpacity = changeColorOpacity.changeColorOpacity;
exports.changeGradientOpacity = changeColorOpacity.changeGradientOpacity;
exports.getAverageColor = getAverageColor.getAverageColor;
exports.getValueFromXScale = getValueFromXScale.getValueFromXScale;
exports.isValueWithinDomain = isValueWithinDomain.isValueWithinDomain;
exports.getClosestDivisibleNumber = getClosestDivisibleNumber.getClosestDivisibleNumber;
exports.roundToDecimals = roundToDecimals.roundToDecimals;
exports.isLargeDataSet = isLargeDataSet.isLargeDataSet;
exports.ColorScale = ColorScale.ColorScale;
exports.isDataGroupArray = isDataGroup.isDataGroupArray;
exports.getGradientFromColor = getGradientFromColor.getGradientFromColor;
exports.OpacityScale = OpacityScale.OpacityScale;
exports.useSparkBar = useSparkBar.useSparkBar;
exports.useSparkLine = useSparkLine.useSparkLine;
exports.useTheme = useTheme.useTheme;
exports.useThemeSeriesColors = useThemeSeriesColors.useThemeSeriesColors;
exports.usePolarisVizContext = usePolarisVizContext.usePolarisVizContext;
exports.useYScale = useYScale.useYScale;
exports.useUniqueId = useUniqueId.useUniqueId;
exports.useAriaLabel = useAriaLabel.useAriaLabel;
exports.useChartContext = useChartContext.useChartContext;
exports.usePrevious = usePrevious.usePrevious;
exports.useChartPositions = useChartPositions.useChartPositions;
exports.useSpringConfig = useSpringConfig.useSpringConfig;
exports.Bar = Bar.Bar;
exports.LineSeries = LineSeries.LineSeries;
exports.LinearGradientWithStops = LinearGradientWithStops.LinearGradientWithStops;
exports.PolarisVizProvider = PolarisVizProvider.PolarisVizProvider;
exports.SparkBarSeries = SparkBarSeries.SparkBarSeries;
exports.ChartContext = ChartContext.ChartContext;
