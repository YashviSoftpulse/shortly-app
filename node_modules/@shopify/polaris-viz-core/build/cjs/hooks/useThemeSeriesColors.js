'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');
var getFilteredSeries = require('../utilities/getFilteredSeries.js');
var getSeriesColors = require('../utilities/getSeriesColors.js');

// Build an array of colors for each item in the series. Colors provided directly
// to series.color are used in place of the theme color.
function useThemeSeriesColors(series, selectedTheme) {
  return react.useMemo(() => {
    const seriesCount = getFilteredSeries.getFilteredSeries(series);
    const seriesColors = getSeriesColors.getSeriesColors(seriesCount, selectedTheme);
    let lastUsedColorIndex = -1;
    return series.map(({
      color,
      isComparison
    }) => {
      if (isComparison === true) {
        return selectedTheme.seriesColors.comparison;
      } // If the series doesn't have a color property
      // explicitly set on itself, we're going to grab
      // the next available color in the array.


      if (!color) {
        lastUsedColorIndex += 1; // Once we've hit the last item in the array,
        // reset the count and grab the first color.

        if (lastUsedColorIndex === seriesColors.length) {
          lastUsedColorIndex = 0;
        }

        return seriesColors[lastUsedColorIndex];
      }

      return color;
    });
  }, [series, selectedTheme]);
}

exports.useThemeSeriesColors = useThemeSeriesColors;
