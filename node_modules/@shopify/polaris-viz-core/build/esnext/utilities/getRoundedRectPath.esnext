import { borderRadiusStringToObject } from './borderRadiusStringToObject.esnext';
import { clamp } from './clamp.esnext';

function keepValuePositive(amount) {
  return clamp({
    amount,
    min: 0,
    max: Infinity
  });
}
function getRoundedRectPath({
  borderRadius,
  height,
  width
}) {
  if (height == null || width == null) {
    return '';
  }

  let {
    topLeft,
    topRight,
    bottomRight,
    bottomLeft
  } = borderRadiusStringToObject(borderRadius);
  const smallestSize = Math.min(height, width);
  topLeft = Math.min(topLeft, smallestSize / 2);
  topRight = Math.min(topRight, smallestSize / 2);
  bottomRight = Math.min(bottomRight, smallestSize / 2);
  bottomLeft = Math.min(bottomLeft, smallestSize / 2);
  const top = topLeft + topRight;
  const right = topRight + bottomRight;
  const bottom = bottomRight + bottomLeft;
  const left = bottomLeft + topLeft;
  return `
  M${topLeft},0
  h${keepValuePositive(width - top)}
  a${topRight},${topRight} 0 0 1 ${topRight},${topRight}
  v${keepValuePositive(height - right)}
  a${bottomRight},${bottomRight} 0 0 1 -${bottomRight},${bottomRight}
  h-${keepValuePositive(width - bottom)}
  a${bottomLeft},${bottomLeft} 0 0 1 -${bottomLeft},-${bottomLeft}
  v-${keepValuePositive(height - left)}
  a${topLeft},${topLeft} 0 0 1 ${topLeft},-${topLeft}
  Z
`;
}

export { getRoundedRectPath, keepValuePositive };
