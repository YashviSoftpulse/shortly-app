import { createElement } from 'react';
import variables from './styles/shared/_variables.scss.esnext';
import { createGradient } from './utilities/createGradient.esnext';
import { ChartState, InternalChartType, Hue } from './types.esnext';

const LINE_HEIGHT = 14;
const FONT_SIZE = 11;
const FONT_FAMILY = 'Inter, -apple-system, "system-ui", "San Francisco", "Segoe UI", Roboto, "Helvetica Neue", sans-serif';
const XMLNS = 'http://www.w3.org/2000/svg';
const BASE_ANIMATION_DURATION = 200;
const LOAD_ANIMATION_DURATION = 500;
const SHAPE_ANIMATION_HEIGHT_BUFFER = 30;
const DEFAULT_BORDER_RADIUS = 3;
const BORDER_RADIUS = {
  None: '0 0 0 0',
  Top: `${DEFAULT_BORDER_RADIUS} ${DEFAULT_BORDER_RADIUS} 0 0`,
  Right: `0 ${DEFAULT_BORDER_RADIUS} ${DEFAULT_BORDER_RADIUS} 0`,
  Bottom: `0 0 ${DEFAULT_BORDER_RADIUS} ${DEFAULT_BORDER_RADIUS}`,
  Left: `${DEFAULT_BORDER_RADIUS} 0 0 ${DEFAULT_BORDER_RADIUS}`,
  All: `${DEFAULT_BORDER_RADIUS}`
};
const HORIZONTAL_BAR_LABEL_HEIGHT = 12;
const HORIZONTAL_BAR_LABEL_OFFSET = 10;
const HORIZONTAL_GROUP_LABEL_HEIGHT = 20;
const HORIZONTAL_SPACE_BETWEEN_SETS = 16;
const HORIZONTAL_SPACE_BETWEEN_SINGLE = 2;
const HORIZONTAL_SPACE_BETWEEN_CHART_AND_AXIS = 5;
const BAR_SPACING = 0.5;
const LINE_ANIMATION_FAST_DURATION = 100;
const LINE_ANIMATION_SLOW_DURATION = 325;
const LINE_ANIMATION_FAST_COUNT = 10;
const LINE_ANIMATION_DURATION_STEP = 25;
const DEFAULT_MAX_Y = 10;
const MIN_BAR_HEIGHT = 2;
const EMPTY_STATE_CHART_MIN = 0;
const EMPTY_STATE_CHART_MAX = 10;
let ChartMargin;

(function (ChartMargin) {
  ChartMargin[ChartMargin["Top"] = 5] = "Top";
  ChartMargin[ChartMargin["Left"] = 0] = "Left";
  ChartMargin[ChartMargin["Bottom"] = 24] = "Bottom";
  ChartMargin[ChartMargin["Right"] = 0] = "Right";
})(ChartMargin || (ChartMargin = {}));

const BARS_TRANSITION_CONFIG = {
  mass: 1,
  tension: 190,
  friction: 26
};
const BARS_SORT_TRANSITION_CONFIG = {
  mass: 1,
  tension: 150,
  friction: 20,
  restVelocity: 200
};
const BARS_LOAD_ANIMATION_CONFIG = {
  mass: 1,
  tension: 140,
  friction: 18
};
const AREAS_LOAD_ANIMATION_CONFIG = {
  mass: 1,
  tension: 120,
  friction: 20,
  clamp: true
};
const AREAS_TRANSITION_CONFIG = {
  mass: 1,
  tension: 190,
  friction: 26,
  clamp: true
};
const LINES_LOAD_ANIMATION_CONFIG = {
  mass: 1,
  tension: 140,
  friction: 18
};
const LINES_TRANSITION_CONFIG = {
  mass: 1,
  tension: 190,
  friction: 26
};
const ARC_LOAD_ANIMATION_CONFIG = {
  mass: 1,
  tension: 150,
  friction: 10
};
const ARC_DATA_CHANGE_ANIMATION_CONFIG = {
  mass: 1,
  tension: 150,
  friction: 20,
  restVelocity: 200
};
const MASK_HIGHLIGHT_COLOR = '#ffffff';
const COLOR_VARIABLES = variables;
const DEFAULT_THEME_NAME = 'Light';
const NEUTRAL_SINGLE_GRADIENT = [{
  offset: 0,
  color: variables.colorIndigo90
}, {
  offset: 85,
  color: variables.colorBlue90
}, {
  offset: 100,
  color: variables.colorBlue70
}];
const DEFAULT_CHART_BORDER_RADIUS = '0px';
const DEFAULT_CHART_PADDING = '0px';
const DEFAULT_SPARK_CHART_MIN_HEIGHT = 40;
const DEFAULT_CHART_MIN_HEIGHT = 200;
const DEFAULT_LINE_HAS_AREA = true;
const DEFAULT_LINE_HAS_SPLINE = true;
const DEFAULT_LINE_WIDTH = 2;
const DEFAULT_ARC_CORNER_RADIUS = 2;
const DEFAULT_ARC_CORNER_THICKNESS = 36;
const THIN_ARC_CORNER_THICKNESS = 12;
const DEFAULT_GRID_SHOW_HORIZONTAL_LINES = true;
const DEFAULT_GRID_HORIZONTAL_OVERFLOW = true;
const DEFAULT_GRID_VERTICAL_OVERFLOW = true;
const DEFAULT_GRID_HORIZONTAL_MARGIN = 16;
const DEFAULT_X_AXIS_HIDE = false;
const DEFAULT_GROUP_LABEL_HIDE = false;
const DEFAULT_CROSSHAIR_WIDTH = 1;
const TREND_POSITIVE = '#078d4e';
const TREND_NEGATIVE = '#616161';
const TREND_NEUTRAL = '#8a8a8a';
const DARK_THEME = {
  seriesColors: {
    empty: variables.colorGray140,
    comparison: variables.colorDarkComparison,
    single: NEUTRAL_SINGLE_GRADIENT,
    limited: [createGradient(variables.colorIndigo70, variables.colorIndigo90), createGradient(variables.colorBlue70, variables.colorBlue90), createGradient(variables.colorMagenta70, variables.colorMagenta90), createGradient(variables.colorTeal70, variables.colorTeal90), createGradient(variables.colorPurple50, variables.colorPurple70), createGradient(variables.colorOrange60, variables.colorOrange80), createGradient(variables.colorYellow20, variables.colorYellow40)],
    all: [variables.colorTeal90, variables.colorBlue50, variables.colorIndigo90, variables.colorPurple70, variables.colorMagenta90, variables.colorOrange50, variables.colorYellow70, variables.colorTeal40, variables.colorBlue80, variables.colorIndigo40, variables.colorPurple90, variables.colorMagenta70, variables.colorOrange80, variables.colorYellow20]
  },
  tooltip: {
    backgroundColor: variables.colorGray150,
    textColor: variables.colorWhite,
    titleColor: variables.colorGray50
  },
  chartContainer: {
    backgroundColor: variables.colorGray160,
    borderRadius: DEFAULT_CHART_BORDER_RADIUS,
    minHeight: DEFAULT_CHART_MIN_HEIGHT,
    padding: DEFAULT_CHART_PADDING,
    sparkChartMinHeight: DEFAULT_SPARK_CHART_MIN_HEIGHT
  },
  line: {
    hasArea: DEFAULT_LINE_HAS_AREA,
    hasSpline: DEFAULT_LINE_HAS_SPLINE,
    width: DEFAULT_LINE_WIDTH,
    pointStroke: variables.colorGray160
  },
  arc: {
    cornerRadius: DEFAULT_ARC_CORNER_RADIUS,
    thickness: DEFAULT_ARC_CORNER_THICKNESS
  },
  bar: {
    zeroValueColor: variables.colorGray80,
    borderRadius: DEFAULT_BORDER_RADIUS
  },
  grid: {
    showHorizontalLines: DEFAULT_GRID_SHOW_HORIZONTAL_LINES,
    color: variables.colorGray140,
    horizontalOverflow: DEFAULT_GRID_HORIZONTAL_OVERFLOW,
    horizontalMargin: DEFAULT_GRID_HORIZONTAL_MARGIN,
    verticalOverflow: DEFAULT_GRID_VERTICAL_OVERFLOW
  },
  xAxis: {
    labelColor: variables.colorGray30,
    hide: DEFAULT_X_AXIS_HIDE
  },
  yAxis: {
    backgroundColor: variables.colorGray160,
    labelColor: variables.colorGray30
  },
  groupLabel: {
    hide: DEFAULT_GROUP_LABEL_HIDE
  },
  crossHair: {
    color: variables.colorGray70,
    width: DEFAULT_CROSSHAIR_WIDTH
  },
  legend: {
    valueColor: variables.colorGray70,
    labelColor: variables.colorGray30,
    backgroundColor: variables.colorGray150,
    trendIndicator: {
      positive: TREND_POSITIVE,
      negative: TREND_NEGATIVE,
      neutral: TREND_NEUTRAL
    }
  },
  annotations: {
    backgroundColor: variables.colorGray140,
    textColor: variables.colorGray30,
    titleColor: variables.colorWhite,
    linkColor: variables.colorBlue40,
    axisLabelColor: variables.colorGray80,
    lineColor: variables.colorGray80,
    pillOpacity: 0.6
  },
  trendIndicator: {
    positive: TREND_POSITIVE,
    negative: TREND_NEGATIVE,
    neutral: TREND_NEUTRAL
  },
  missingData: {
    lineColor: variables.colorGray130
  }
};
const LIGHT_BLUE = [{
  offset: 0,
  color: '#079EE1'
}, {
  offset: 100,
  color: '#2EB9F5'
}];
const INDIGO = [{
  offset: 0,
  color: '#6A42E9'
}, {
  offset: 100,
  color: '#8F71EF'
}];
const BLUE = [{
  offset: 0,
  color: '#3E69EA'
}, {
  offset: 100,
  color: '#7594F0'
}];
const MAGENTA = [{
  offset: 0,
  color: '#D147AC'
}, {
  offset: 100,
  color: '#DD76C1'
}];
const TEAL = [{
  offset: 0,
  color: '#1D9595'
}, {
  offset: 100,
  color: '#2CD2D2'
}];
const PURPLE = [{
  offset: 0,
  color: '#A249DF'
}, {
  offset: 100,
  color: '#BD7DE8'
}];
const LIGHT_BLUE_09_SOLID = 'rgba(19, 172, 240, 1)';
const INDIGO_10_SOLID = 'rgba(106, 66, 233, 1)';
const BLUE_08_SOLID = 'rgba(89, 126, 237, 1)';
const MAGENTA_10_SOLID = 'rgba(209, 71, 172, 1)';
const TEAL_12_SOLID = 'rgba(35, 186, 186, 1)';
const PURPLE_10_SOLID = 'rgba(155, 60, 221, 1)';
const INDIGIO_07_SOLID = 'rgba(158, 132, 242, 1)';
const LIGHT_BLUE_13_SOLID = 'rgba(18, 138, 192, 1)';
const MAGENTA_09_SOLID = 'rgba(215, 94, 183, 1)';
const BLUE_10_SOLID = 'rgba(48, 94, 232, 1)';
const PURPLE_08_SOLID = 'rgba(175, 99, 228, 1)';
const TEAL_10_SOLID = 'rgba(51, 219, 219, 1)';
const LIGHT_THEME = {
  seriesColors: {
    empty: variables.colorGray20,
    comparison: '#0A97D5',
    single: [{
      offset: 0,
      color: '#0A97D5'
    }, {
      offset: 100,
      color: '#50C3F7'
    }],
    limited: [LIGHT_BLUE, INDIGO, BLUE, MAGENTA, TEAL, PURPLE],
    all: [LIGHT_BLUE_09_SOLID, INDIGO_10_SOLID, BLUE_08_SOLID, MAGENTA_10_SOLID, TEAL_12_SOLID, PURPLE_10_SOLID, INDIGIO_07_SOLID, LIGHT_BLUE_13_SOLID, MAGENTA_09_SOLID, BLUE_10_SOLID, PURPLE_08_SOLID, TEAL_10_SOLID]
  },
  tooltip: {
    backgroundColor: variables.colorGray00,
    textColor: variables.colorGray160,
    titleColor: variables.colorGray100
  },
  chartContainer: {
    backgroundColor: variables.colorGray00,
    borderRadius: DEFAULT_CHART_BORDER_RADIUS,
    minHeight: DEFAULT_CHART_MIN_HEIGHT,
    padding: DEFAULT_CHART_PADDING,
    sparkChartMinHeight: DEFAULT_SPARK_CHART_MIN_HEIGHT
  },
  line: {
    hasArea: DEFAULT_LINE_HAS_AREA,
    hasSpline: DEFAULT_LINE_HAS_SPLINE,
    width: DEFAULT_LINE_WIDTH,
    pointStroke: variables.colorGray00
  },
  arc: {
    cornerRadius: DEFAULT_ARC_CORNER_RADIUS,
    thickness: DEFAULT_ARC_CORNER_THICKNESS
  },
  bar: {
    zeroValueColor: variables.colorGray70,
    borderRadius: DEFAULT_BORDER_RADIUS
  },
  grid: {
    showHorizontalLines: DEFAULT_GRID_SHOW_HORIZONTAL_LINES,
    color: variables.colorGray20,
    horizontalOverflow: DEFAULT_GRID_HORIZONTAL_OVERFLOW,
    horizontalMargin: DEFAULT_GRID_HORIZONTAL_MARGIN,
    verticalOverflow: DEFAULT_GRID_VERTICAL_OVERFLOW
  },
  xAxis: {
    labelColor: variables.colorGray100,
    hide: DEFAULT_X_AXIS_HIDE
  },
  yAxis: {
    backgroundColor: variables.colorGray00,
    labelColor: variables.colorGray100
  },
  groupLabel: {
    hide: DEFAULT_GROUP_LABEL_HIDE
  },
  crossHair: {
    color: variables.colorGray40,
    width: DEFAULT_CROSSHAIR_WIDTH
  },
  legend: {
    valueColor: variables.colorGray160,
    labelColor: variables.colorGray100,
    backgroundColor: null,
    trendIndicator: {
      positive: TREND_POSITIVE,
      negative: TREND_NEGATIVE,
      neutral: TREND_NEUTRAL
    }
  },
  annotations: {
    backgroundColor: variables.colorGray100,
    textColor: variables.colorWhite,
    titleColor: variables.colorWhite,
    linkColor: variables.colorBlue40,
    axisLabelColor: variables.colorGray70,
    lineColor: variables.colorGray70,
    pillOpacity: 1
  },
  trendIndicator: {
    positive: TREND_POSITIVE,
    negative: TREND_NEGATIVE,
    neutral: TREND_NEUTRAL
  },
  missingData: {
    lineColor: variables.colorGray40
  }
};
const PRINT_THEME = { ...LIGHT_THEME,
  seriesColors: {
    empty: variables.colorGray20,
    comparison: variables.colorLightComparison,
    single: variables.colorIndigo90,
    limited: [variables.colorIndigo70, variables.colorBlue70, variables.colorMagenta70, variables.colorTeal70, variables.colorPurple70, variables.colorOrange70, variables.colorYellow70],
    all: [variables.colorTeal90, variables.colorBlue70, variables.colorIndigo90, variables.colorPurple70, variables.colorMagenta90, variables.colorOrange80, variables.colorYellow50, variables.colorTeal70, variables.colorBlue80, variables.colorIndigo70, variables.colorPurple90, variables.colorMagenta70, variables.colorOrange110, variables.colorYellow70]
  }
};
const STACKED_BAR_GAP = 2;
const COLOR_VISION_ACTIVE_OPACITY = 1;
const COLOR_VISION_FADED_OPACITY = 0.3;
const COLOR_VISION_SINGLE_ITEM = 'singleItem';
const COLOR_VISION_GROUP_ITEM = 'group';
const EXTERNAL_EVENTS_SET_HIDDEN_ITEMS = 'setHiddenItems';
const LEGENDS_TOP_MARGIN = 16;
const LEGENDS_BOTTOM_MARGIN = 16;
const Y_AXIS_CHART_SPACING = 20;
const LABEL_AREA_TOP_SPACING = 16;
const ELLIPSIS = '…';
const HORIZONTAL_LABEL_MIN_WIDTH = 46;
const HORIZONTAL_LABEL_TARGET_HEIGHT = 80;
const DIAGONAL_LABEL_MIN_WIDTH = 30;
const MAX_DIAGONAL_LABEL_WIDTH = 100; // Visible height of a 100px wide label at 45deg

const MAX_DIAGONAL_VISIBLE_HEIGHT = 80;
const VERTICAL_LABEL_TARGET_WIDTH = 80;
const VERTICAL_LABEL_MIN_WIDTH = 14;
const DEFAULT_COMPONENTS = {
  Svg: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('svg', props, children),
  Circle: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('circle', props, children),
  Ellipse: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('ellipse', props, children),
  // eslint-disable-next-line id-length
  G: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('g', props, children),
  Text: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('text', props, children),
  TSpan: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('tSpan', props, children),
  TextPath: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('textPath', props, children),
  Path: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('path', props, children),
  Polygon: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('polygon', props, children),
  Polyline: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('polyline', props, children),
  Line: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('line', props, children),
  Rect: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('rect', props, children),
  Use: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('use', props, children),
  Image: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('image', props, children),
  Symbol: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('symbol', props, children),
  Defs: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('defs', props, children),
  LinearGradient: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('linearGradient', props, children),
  RadialGradient: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('radialGradient', props, children),
  Stop: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('stop', props, children),
  ClipPath: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('clipPath', props, children),
  Pattern: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('pattern', props, children),
  Mask: ({
    children,
    ...props
  }) => /*#__PURE__*/createElement('mask', props, children)
};
const STROKE_WIDTH = 1.5;
const STROKE_DOT_ARRAY_WIDTH = '0.1 4';
const ANIMATION_MARGIN = 17;
const LINEAR_LABELS_INNER_PADDING = 10;
const COLOR_VISION_EVENT = {
  name: 'color-vision-event',
  dataAttribute: 'data-color-vision-event',
  camelCaseName: 'colorVisionEvent'
};
const DEFAULT_CHART_PROPS = {
  isAnimated: true,
  state: ChartState.Success,
  errorText: 'Could not load the chart'
};
const TOO_MANY_DATA_POINTS_THRESHOLD = {
  [InternalChartType.Bar]: 60,
  [InternalChartType.Line]: 150,
  [InternalChartType.Combo]: 60
};
const TOO_MANY_DATA_SERIES_THRESHOLD = 14;
const LINE_SERIES_POINT_RADIUS = 2;
const HUES = {
  [Hue.Teal]: [variables.colorTeal00, variables.colorTeal10, variables.colorTeal20, variables.colorTeal30, variables.colorTeal40, variables.colorTeal50, variables.colorTeal60, variables.colorTeal70, variables.colorTeal80, variables.colorTeal90, variables.colorTeal100, variables.colorTeal110, variables.colorTeal120, variables.colorTeal130, variables.colorTeal140, variables.colorTeal150, variables.colorTeal160],
  [Hue.Blue]: [variables.colorBlue00, variables.colorBlue10, variables.colorBlue20, variables.colorBlue30, variables.colorBlue40, variables.colorBlue50, variables.colorBlue60, variables.colorBlue70, variables.colorBlue80, variables.colorBlue90, variables.colorBlue100, variables.colorBlue110, variables.colorBlue120, variables.colorBlue130, variables.colorBlue140, variables.colorBlue150, variables.colorBlue160],
  [Hue.Indigo]: [variables.colorIndigo00, variables.colorIndigo10, variables.colorIndigo20, variables.colorIndigo30, variables.colorIndigo40, variables.colorIndigo50, variables.colorIndigo60, variables.colorIndigo70, variables.colorIndigo80, variables.colorIndigo90, variables.colorIndigo100, variables.colorIndigo110, variables.colorIndigo120, variables.colorIndigo130, variables.colorIndigo140, variables.colorIndigo150, variables.colorIndigo160],
  [Hue.Purple]: [variables.colorPurple00, variables.colorPurple10, variables.colorPurple20, variables.colorPurple30, variables.colorPurple40, variables.colorPurple50, variables.colorPurple60, variables.colorPurple70, variables.colorPurple80, variables.colorPurple90, variables.colorPurple100, variables.colorPurple110, variables.colorPurple120, variables.colorPurple130, variables.colorPurple140, variables.colorPurple150, variables.colorPurple160],
  [Hue.Magenta]: [variables.colorMagenta00, variables.colorMagenta10, variables.colorMagenta20, variables.colorMagenta30, variables.colorMagenta40, variables.colorMagenta50, variables.colorMagenta60, variables.colorMagenta70, variables.colorMagenta80, variables.colorMagenta90, variables.colorMagenta100, variables.colorMagenta110, variables.colorMagenta120, variables.colorMagenta130, variables.colorMagenta140, variables.colorMagenta150, variables.colorMagenta160],
  [Hue.Orange]: [variables.colorOrange00, variables.colorOrange10, variables.colorOrange20, variables.colorOrange30, variables.colorOrange40, variables.colorOrange50, variables.colorOrange60, variables.colorOrange70, variables.colorOrange80, variables.colorOrange90, variables.colorOrange100, variables.colorOrange110, variables.colorOrange120, variables.colorOrange130, variables.colorOrange140, variables.colorOrange150, variables.colorOrange160],
  [Hue.Yellow]: [variables.colorYellow00, variables.colorYellow10, variables.colorYellow20, variables.colorYellow30, variables.colorYellow40, variables.colorYellow50, variables.colorYellow60, variables.colorYellow70, variables.colorYellow80, variables.colorYellow90, variables.colorYellow100, variables.colorYellow110, variables.colorYellow120, variables.colorYellow130, variables.colorYellow140, variables.colorYellow150, variables.colorYellow160]
};

export { ANIMATION_MARGIN, ARC_DATA_CHANGE_ANIMATION_CONFIG, ARC_LOAD_ANIMATION_CONFIG, AREAS_LOAD_ANIMATION_CONFIG, AREAS_TRANSITION_CONFIG, BARS_LOAD_ANIMATION_CONFIG, BARS_SORT_TRANSITION_CONFIG, BARS_TRANSITION_CONFIG, BAR_SPACING, BASE_ANIMATION_DURATION, BORDER_RADIUS, COLOR_VARIABLES, COLOR_VISION_ACTIVE_OPACITY, COLOR_VISION_EVENT, COLOR_VISION_FADED_OPACITY, COLOR_VISION_GROUP_ITEM, COLOR_VISION_SINGLE_ITEM, ChartMargin, DARK_THEME, DEFAULT_BORDER_RADIUS, DEFAULT_CHART_PROPS, DEFAULT_COMPONENTS, DEFAULT_MAX_Y, DEFAULT_THEME_NAME, DIAGONAL_LABEL_MIN_WIDTH, ELLIPSIS, EMPTY_STATE_CHART_MAX, EMPTY_STATE_CHART_MIN, EXTERNAL_EVENTS_SET_HIDDEN_ITEMS, FONT_FAMILY, FONT_SIZE, HORIZONTAL_BAR_LABEL_HEIGHT, HORIZONTAL_BAR_LABEL_OFFSET, HORIZONTAL_GROUP_LABEL_HEIGHT, HORIZONTAL_LABEL_MIN_WIDTH, HORIZONTAL_LABEL_TARGET_HEIGHT, HORIZONTAL_SPACE_BETWEEN_CHART_AND_AXIS, HORIZONTAL_SPACE_BETWEEN_SETS, HORIZONTAL_SPACE_BETWEEN_SINGLE, HUES, LABEL_AREA_TOP_SPACING, LEGENDS_BOTTOM_MARGIN, LEGENDS_TOP_MARGIN, LIGHT_THEME, LINEAR_LABELS_INNER_PADDING, LINES_LOAD_ANIMATION_CONFIG, LINES_TRANSITION_CONFIG, LINE_ANIMATION_DURATION_STEP, LINE_ANIMATION_FAST_COUNT, LINE_ANIMATION_FAST_DURATION, LINE_ANIMATION_SLOW_DURATION, LINE_HEIGHT, LINE_SERIES_POINT_RADIUS, LOAD_ANIMATION_DURATION, MASK_HIGHLIGHT_COLOR, MAX_DIAGONAL_LABEL_WIDTH, MAX_DIAGONAL_VISIBLE_HEIGHT, MIN_BAR_HEIGHT, NEUTRAL_SINGLE_GRADIENT, PRINT_THEME, SHAPE_ANIMATION_HEIGHT_BUFFER, STACKED_BAR_GAP, STROKE_DOT_ARRAY_WIDTH, STROKE_WIDTH, THIN_ARC_CORNER_THICKNESS, TOO_MANY_DATA_POINTS_THRESHOLD, TOO_MANY_DATA_SERIES_THRESHOLD, VERTICAL_LABEL_MIN_WIDTH, VERTICAL_LABEL_TARGET_WIDTH, XMLNS, Y_AXIS_CHART_SPACING };
