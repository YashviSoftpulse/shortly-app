import { useMemo, Fragment } from 'react';
import { jsxs, jsx } from 'react/jsx-runtime';
import { uniqueId } from '../../../../utilities/uniqueId.esnext';
import { usePolarisVizContext } from '../../../../hooks/usePolarisVizContext.esnext';
import { LinearGradientWithStops } from '../../../LinearGradientWithStops/LinearGradientWithStops.esnext';
import { getGradientFromColor } from '../../../../utilities/getGradientFromColor.esnext';

function getGradientFill(color) {
  if (color == null) {
    return null;
  }

  return getGradientFromColor(color);
}

const MASK_GRADIENT = [{
  offset: 20,
  color: 'white'
}, {
  offset: 100,
  color: 'black'
}];
function SparkArea({
  areaPath,
  color
}) {
  const gradientId = useMemo(() => uniqueId('spark-area-gradient'), []);
  const maskId = useMemo(() => uniqueId('spark-area-mask'), []);
  const areaGradientColor = getGradientFill(color);
  const {
    components: {
      Defs,
      Mask,
      Path
    },
    animated
  } = usePolarisVizContext();
  const AnimatedPath = animated(Path);
  return areaGradientColor == null ? null : /*#__PURE__*/jsxs(Fragment, {
    children: [/*#__PURE__*/jsxs(Defs, {
      children: [/*#__PURE__*/jsx(Mask, {
        id: maskId,
        children: /*#__PURE__*/jsx(AnimatedPath, {
          fill: `url(#${maskId}-gradient)`,
          d: areaPath
        })
      }), /*#__PURE__*/jsx(LinearGradientWithStops, {
        id: `${maskId}-gradient`,
        y1: "0%",
        y2: "100%",
        gradient: MASK_GRADIENT
      }), /*#__PURE__*/jsx(LinearGradientWithStops, {
        id: gradientId,
        y1: "100%",
        y2: "0%",
        gradient: areaGradientColor
      })]
    }), /*#__PURE__*/jsx(AnimatedPath, {
      d: areaPath,
      fill: `url(#${gradientId})`,
      mask: `url(#${maskId})`,
      opacity: "0.2"
    })]
  });
}

export { SparkArea };
