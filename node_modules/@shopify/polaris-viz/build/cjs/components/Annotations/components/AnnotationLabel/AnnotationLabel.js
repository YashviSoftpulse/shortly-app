'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var polarisVizCore = require('@shopify/polaris-viz-core');
var useBrowserCheck = require('../../../../hooks/useBrowserCheck.js');
var constants = require('../../constants.js');
var AnnotationLabel$1 = require('./AnnotationLabel.scss.js');
var jsxRuntime = require('react/jsx-runtime');
var SingleTextLine = require('../../../Labels/SingleTextLine.js');

const PX_OFFSET = 1;
const CONTENT_LINE_OFFSET = 3;
function AnnotationLabel({
  ariaLabel,
  hasContent,
  index,
  isVisible,
  label,
  position,
  setActiveIndex,
  tabIndex
}) {
  const selectedTheme = polarisVizCore.useTheme();
  const {
    isFirefox
  } = useBrowserCheck.useBrowserCheck();
  const {
    x,
    y,
    width
  } = position;
  const formattedAriaLabel = `${ariaLabel}: ${label}`;
  return /*#__PURE__*/jsxRuntime.jsxs("g", {
    transform: `translate(${x},${y})`,
    opacity: isVisible ? 1 : 0,
    "aria-hidden": true,
    children: [/*#__PURE__*/jsxRuntime.jsx("foreignObject", {
      height: constants.PILL_HEIGHT,
      width: width,
      style: {
        overflow: 'visible'
      },
      children: /*#__PURE__*/jsxRuntime.jsx("div", {
        className: AnnotationLabel$1["default"].Blur,
        style: {
          borderRadius: constants.PILL_HEIGHT / 2
        }
      })
    }), /*#__PURE__*/jsxRuntime.jsx("rect", {
      height: constants.PILL_HEIGHT,
      width: width,
      fill: selectedTheme.annotations.backgroundColor,
      ry: constants.PILL_HEIGHT / 2,
      opacity: isFirefox ? 1 : selectedTheme.annotations.pillOpacity
    }), /*#__PURE__*/jsxRuntime.jsx(SingleTextLine.SingleTextLine, {
      ariaHidden: true,
      color: selectedTheme.annotations.textColor,
      text: label,
      targetWidth: width - constants.PILL_PADDING * 2 + PX_OFFSET,
      y: constants.PILL_HEIGHT - polarisVizCore.LINE_HEIGHT - PX_OFFSET,
      x: constants.PILL_PADDING
    }), /*#__PURE__*/jsxRuntime.jsxs(React.Fragment, {
      children: [hasContent && /*#__PURE__*/jsxRuntime.jsx("line", {
        x1: constants.PILL_PADDING,
        x2: width - constants.PILL_PADDING,
        y1: constants.PILL_HEIGHT - CONTENT_LINE_OFFSET,
        y2: constants.PILL_HEIGHT - CONTENT_LINE_OFFSET,
        stroke: selectedTheme.annotations.textColor,
        strokeDasharray: "1, 3",
        strokeWidth: 1
      }), /*#__PURE__*/jsxRuntime.jsx("foreignObject", {
        height: constants.PILL_HEIGHT,
        width: width,
        style: {
          overflow: 'visible'
        },
        children: /*#__PURE__*/jsxRuntime.jsx("button", {
          "aria-describedby": `annotation-content-${index}`,
          "aria-label": formattedAriaLabel,
          className: AnnotationLabel$1["default"].Button,
          onMouseEnter: () => setActiveIndex(index),
          onFocus: () => setActiveIndex(index),
          tabIndex: tabIndex,
          style: {
            borderRadius: constants.PILL_HEIGHT / 2
          },
          children: label
        })
      })]
    })]
  });
}

exports.AnnotationLabel = AnnotationLabel;
