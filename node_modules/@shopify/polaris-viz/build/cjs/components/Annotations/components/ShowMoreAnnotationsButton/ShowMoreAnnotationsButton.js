'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');
var constants = require('../../constants.js');
var ShowMoreAnnotationsButton$1 = require('./ShowMoreAnnotationsButton.scss.js');
var jsxRuntime = require('react/jsx-runtime');
var Shadow = require('./components/Shadow.js');
var Icon = require('./components/Icon.js');
var SingleTextLine = require('../../../Labels/SingleTextLine.js');

const STROKE = 2;
function ShowMoreAnnotationsButton({
  annotationsCount,
  collapseText = 'Collapse annotations',
  expandText = 'Expand annotations',
  isShowingAllAnnotations,
  onClick,
  tabIndex,
  width
}) {
  const {
    characterWidths
  } = polarisVizCore.useChartContext();
  const selectedTheme = polarisVizCore.useTheme();
  const label = isShowingAllAnnotations ? collapseText : `${expandText} (${annotationsCount})`;
  const textWidth = polarisVizCore.estimateStringWidth(label, characterWidths);
  const radius = constants.PILL_HEIGHT / 2;
  const pillWidth = width + Math.abs(constants.PILL_X_MIN);
  const pillHeight = constants.PILL_HEIGHT + STROKE;
  return /*#__PURE__*/jsxRuntime.jsxs("g", {
    className: ShowMoreAnnotationsButton$1["default"].Button,
    transform: `translate(${constants.PILL_X_MIN},-1)`,
    onClick: onClick,
    tabIndex: 0,
    children: [!isShowingAllAnnotations && /*#__PURE__*/jsxRuntime.jsx(Shadow.Shadow, {
      height: pillHeight,
      width: pillWidth,
      fill: selectedTheme.annotations.backgroundColor,
      radius: radius
    }), /*#__PURE__*/jsxRuntime.jsx("rect", {
      height: pillHeight,
      width: pillWidth,
      fill: isShowingAllAnnotations ? 'transparent' : selectedTheme.annotations.backgroundColor,
      ry: radius,
      stroke: isShowingAllAnnotations ? selectedTheme.annotations.backgroundColor : selectedTheme.chartContainer.backgroundColor,
      strokeWidth: STROKE
    }), /*#__PURE__*/jsxRuntime.jsx(Icon.Icon, {
      fill: selectedTheme.annotations.textColor,
      isShowingAllAnnotations: isShowingAllAnnotations
    }), /*#__PURE__*/jsxRuntime.jsx(SingleTextLine.SingleTextLine, {
      color: selectedTheme.annotations.textColor,
      text: label,
      targetWidth: pillWidth - constants.PILL_PADDING * 2,
      y: constants.PILL_HEIGHT - polarisVizCore.LINE_HEIGHT,
      x: pillWidth / 2 - textWidth / 2
    }), /*#__PURE__*/jsxRuntime.jsx("foreignObject", {
      height: constants.PILL_HEIGHT,
      width: pillWidth,
      style: {
        overflow: 'visible'
      },
      children: /*#__PURE__*/jsxRuntime.jsx("button", {
        className: ShowMoreAnnotationsButton$1["default"].Button,
        onClick: onClick,
        style: {
          borderRadius: constants.PILL_HEIGHT / 2
        },
        tabIndex: tabIndex,
        children: label
      })
    })]
  });
}

exports.ShowMoreAnnotationsButton = ShowMoreAnnotationsButton;
