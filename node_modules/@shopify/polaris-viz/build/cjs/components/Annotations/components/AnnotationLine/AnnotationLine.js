'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');
var React = require('react');
var useBrowserCheck = require('../../../../hooks/useBrowserCheck.js');
var AnnotationLine$1 = require('./AnnotationLine.scss.js');
var jsxRuntime = require('react/jsx-runtime');

const CARET_SIZE = 16;
const CARET_Y_OFFSET = -4;

function getLineCoords({
  direction,
  size,
  x,
  y
}) {
  if (direction === 'vertical') {
    return {
      x1: x,
      x2: x,
      y1: y,
      y2: size
    };
  }

  return {
    x1: x,
    x2: size,
    y1: y,
    y2: y
  };
}

function AnnotationLine({
  direction = 'vertical',
  hasCaret = true,
  size,
  x,
  y
}) {
  const selectedTheme = polarisVizCore.useTheme();
  const {
    isFirefox
  } = useBrowserCheck.useBrowserCheck();
  const yPosition = hasCaret ? y + Math.abs(CARET_Y_OFFSET) : y;
  return /*#__PURE__*/jsxRuntime.jsxs(React.Fragment, {
    children: [/*#__PURE__*/jsxRuntime.jsx("line", {
      className: AnnotationLine$1["default"].Line,
      stroke: selectedTheme.annotations.lineColor,
      strokeWidth: "1",
      strokeDasharray: "3 2",
      ...getLineCoords({
        direction,
        size,
        x,
        y: yPosition
      })
    }), hasCaret && /*#__PURE__*/jsxRuntime.jsx("path", {
      d: "M9.31 7.866a2 2 0 0 1-2.62 0L1.664 3.512C.263 2.3 1.12 0 2.973 0h10.055c1.852 0 2.709 2.3 1.31 3.512L9.308 7.866Z",
      transform: `translate(${x - CARET_SIZE / 2}, ${y + CARET_Y_OFFSET})`,
      fill: selectedTheme.annotations.backgroundColor,
      opacity: isFirefox ? 1 : selectedTheme.annotations.pillOpacity
    })]
  });
}

exports.AnnotationLine = AnnotationLine;
