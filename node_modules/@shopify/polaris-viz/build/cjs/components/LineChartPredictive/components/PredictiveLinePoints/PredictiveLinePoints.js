'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');
var React = require('react');
var jsxRuntime = require('react/jsx-runtime');
var useWatchColorVisionEvents = require('../../../../hooks/ColorVisionA11y/useWatchColorVisionEvents.js');
var Point = require('../../../Point/Point.js');

function PredictiveLinePoints({
  data,
  xScale,
  yScale
}) {
  const [activeLineIndex, setActiveLineIndex] = React.useState(-1);
  const id = React.useMemo(() => polarisVizCore.uniqueId('PredictiveLinePoints'), []);
  useWatchColorVisionEvents.useWatchColorVisionEvents({
    type: polarisVizCore.COLOR_VISION_SINGLE_ITEM,
    onIndexChange: ({
      detail
    }) => setActiveLineIndex(detail.index)
  });
  return /*#__PURE__*/jsxRuntime.jsx(React.Fragment, {
    children: data.map((series, seriesIndex) => {
      var _series$metadata, _series$metadata$rela, _series$metadata2, _series$data$predicti, _series$data$predicti2;

      if (((_series$metadata = series.metadata) === null || _series$metadata === void 0 ? void 0 : _series$metadata.isPredictive) == null) {
        return false;
      }

      const index = (_series$metadata$rela = (_series$metadata2 = series.metadata) === null || _series$metadata2 === void 0 ? void 0 : _series$metadata2.relatedIndex) !== null && _series$metadata$rela !== void 0 ? _series$metadata$rela : seriesIndex;
      const pointGradientId = `${id}-point-${index}`;
      const predictiveStartIndex = series.data.findIndex(({
        key
      }) => {
        var _series$metadata3;

        return key === ((_series$metadata3 = series.metadata) === null || _series$metadata3 === void 0 ? void 0 : _series$metadata3.startKey);
      });
      const color = series.color;
      const pointColor = polarisVizCore.isGradientType(color) ? `url(#${pointGradientId})` : polarisVizCore.changeColorOpacity(color);
      return /*#__PURE__*/jsxRuntime.jsxs(React.Fragment, {
        children: [polarisVizCore.isGradientType(color) ? /*#__PURE__*/jsxRuntime.jsx("defs", {
          children: /*#__PURE__*/jsxRuntime.jsx(polarisVizCore.LinearGradientWithStops, {
            id: pointGradientId,
            gradient: polarisVizCore.changeGradientOpacity(color),
            gradientUnits: "userSpaceOnUse",
            y1: "100%",
            y2: "0%"
          })
        }) : null, /*#__PURE__*/jsxRuntime.jsx(Point.Point, {
          color: pointColor,
          cx: xScale(predictiveStartIndex),
          cy: yScale((_series$data$predicti = (_series$data$predicti2 = series.data[predictiveStartIndex]) === null || _series$data$predicti2 === void 0 ? void 0 : _series$data$predicti2.value) !== null && _series$data$predicti !== void 0 ? _series$data$predicti : -1),
          active: activeLineIndex === -1 || activeLineIndex === index,
          index: index,
          isAnimated: false,
          ariaHidden: true
        })]
      }, `${series.name}-${index}`);
    })
  });
}

exports.PredictiveLinePoints = PredictiveLinePoints;
