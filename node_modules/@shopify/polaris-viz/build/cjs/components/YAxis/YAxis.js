'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');
var jsxRuntime = require('react/jsx-runtime');
var SingleTextLine = require('../Labels/SingleTextLine.js');

const PADDING_SIZE = 2;
function YAxis({
  ticks,
  width,
  textAlign,
  ariaHidden = false,
  x,
  y
}) {
  const selectedTheme = polarisVizCore.useTheme();
  const {
    characterWidths
  } = polarisVizCore.useChartContext();
  return /*#__PURE__*/jsxRuntime.jsx("g", {
    transform: `translate(${x},${y})`,
    "aria-hidden": "true",
    children: ticks.map(({
      value,
      formattedValue,
      yOffset
    }) => {
      const stringWidth = polarisVizCore.estimateStringWidth(formattedValue, characterWidths);
      const clampedWidth = polarisVizCore.clamp({
        amount: width,
        min: width + PADDING_SIZE,
        max: stringWidth
      });
      const x = textAlign === 'right' ? width - clampedWidth : 0;
      return /*#__PURE__*/jsxRuntime.jsxs("g", {
        transform: `translate(${x},${yOffset})`,
        children: [/*#__PURE__*/jsxRuntime.jsx("rect", {
          height: polarisVizCore.LINE_HEIGHT,
          width: clampedWidth + PADDING_SIZE,
          fill: selectedTheme.chartContainer.backgroundColor,
          y: -polarisVizCore.LINE_HEIGHT / 2,
          x: -PADDING_SIZE
        }), /*#__PURE__*/jsxRuntime.jsx(SingleTextLine.SingleTextLine, {
          x: 0,
          y: 0,
          ariaHidden: ariaHidden,
          color: selectedTheme.yAxis.labelColor,
          targetWidth: clampedWidth,
          text: formattedValue,
          textAnchor: "left",
          dominantBaseline: "middle"
        })]
      }, value);
    })
  });
}

exports.YAxis = YAxis;
