'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');
var estimateTrendIndicatorWidth = require('./utilities/estimateTrendIndicatorWidth.js');
var constants = require('./constants.js');
var jsxRuntime = require('react/jsx-runtime');
var Svg = require('./components/Svg/Svg.js');
var ArrowUp = require('./components/Arrows/ArrowUp.js');
var ArrowDown = require('./components/Arrows/ArrowDown.js');

const TREND_FONT_WEIGHT = 650;
function TrendIndicator({
  accessibilityLabel,
  direction = 'upward',
  tabIndex = -1,
  theme = 'Light',
  trend = 'neutral',
  value
}) {
  const selectedTheme = polarisVizCore.useTheme(theme);
  const svgProps = {
    accessibilityLabel,
    height: constants.HEIGHT,
    tabIndex
  };

  if (value == null) {
    return /*#__PURE__*/jsxRuntime.jsx(Svg.Svg, { ...svgProps,
      width: constants.NO_VALUE_WIDTH,
      children: /*#__PURE__*/jsxRuntime.jsx("path", {
        d: "M0.519531 1.79395H12.0039V0.249023H0.519531V1.79395Z",
        fill: selectedTheme.trendIndicator.neutral,
        transform: `translate(${(constants.NO_VALUE_WIDTH - constants.NO_VALUE_WIDTH) / 2}, ${(constants.HEIGHT - constants.NO_VALUE_ICON_HEIGHT) / 2})`
      })
    });
  }

  const {
    textWidth,
    totalWidth
  } = estimateTrendIndicatorWidth.estimateTrendIndicatorWidth(value, TREND_FONT_WEIGHT);
  return /*#__PURE__*/jsxRuntime.jsx(Svg.Svg, { ...svgProps,
    width: totalWidth,
    children: /*#__PURE__*/jsxRuntime.jsxs("g", {
      color: selectedTheme.trendIndicator[trend],
      children: [/*#__PURE__*/jsxRuntime.jsx("g", {
        transform: `translate(0, ${(constants.HEIGHT - constants.ICON_SIZE) / 2})`,
        children: direction === 'upward' ? /*#__PURE__*/jsxRuntime.jsx(ArrowUp.ArrowUp, {}) : /*#__PURE__*/jsxRuntime.jsx(ArrowDown.ArrowDown, {})
      }), /*#__PURE__*/jsxRuntime.jsx("text", {
        x: constants.ICON_SIZE + constants.TEXT_ICON_SPACING,
        y: (constants.HEIGHT + constants.Y_OFFSET) / 2,
        fontSize: constants.FONT_SIZE,
        fill: "currentColor",
        fontWeight: TREND_FONT_WEIGHT,
        dominantBaseline: "middle",
        fontFamily: polarisVizCore.FONT_FAMILY,
        textRendering: "geometricPrecision",
        width: textWidth,
        children: value
      })]
    })
  });
}

exports.TrendIndicator = TrendIndicator;
