'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var polarisVizCore = require('@shopify/polaris-viz-core');
var getLineChartDataWithDefaults = require('../../../../utilities/getLineChartDataWithDefaults.js');
var jsxRuntime = require('react/jsx-runtime');
var useWatchColorVisionEvents = require('../../../../hooks/ColorVisionA11y/useWatchColorVisionEvents.js');
var useFormatData = require('../../../LineChart/hooks/useFormatData.js');
var PointsAndCrosshair = require('../../../LineChart/components/PointsAndCrosshair/PointsAndCrosshair.js');

function ComboLineChart({
  activeIndex,
  colors,
  data,
  drawableHeight,
  drawableWidth,
  indexOffset,
  theme,
  xScale,
  yScale
}) {
  const [activeLineIndex, setActiveLineIndex] = React.useState(-1);
  useWatchColorVisionEvents.useWatchColorVisionEvents({
    type: polarisVizCore.COLOR_VISION_SINGLE_ITEM,
    onIndexChange: ({
      detail
    }) => setActiveLineIndex(detail.index)
  });
  const dataWithDefaults = getLineChartDataWithDefaults.getLineChartDataWithDefaults(data.series, colors);
  const {
    longestSeriesIndex
  } = useFormatData.useFormatData(dataWithDefaults);
  return /*#__PURE__*/jsxRuntime.jsxs(React.Fragment, {
    children: [dataWithDefaults.map((singleSeries, index) => {
      return /*#__PURE__*/jsxRuntime.jsx(polarisVizCore.LineSeries, {
        activeLineIndex: activeLineIndex,
        data: singleSeries,
        index: index + indexOffset,
        svgDimensions: {
          height: drawableHeight,
          width: drawableWidth
        },
        theme: theme,
        xScale: xScale,
        yScale: yScale,
        type: "default"
      }, `${name}-${index}`);
    }), /*#__PURE__*/jsxRuntime.jsx(PointsAndCrosshair.PointsAndCrosshair, {
      activeIndex: activeIndex,
      data: dataWithDefaults,
      drawableHeight: drawableHeight,
      emptyState: false,
      longestSeriesIndex: longestSeriesIndex,
      theme: theme,
      tooltipId: "none",
      xScale: xScale,
      yScale: yScale
    })]
  });
}

exports.ComboLineChart = ComboLineChart;
