'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var isEqual = require('fast-deep-equal');
var constants = require('../../../constants.js');
var useFormattedLabels = require('../../../hooks/useFormattedLabels.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var isEqual__default = /*#__PURE__*/_interopDefaultLegacy(isEqual);

function useGetLabelsFromDataGroups({
  data,
  xAxisOptions
}) {
  const {
    formattedLabels: firstLabels
  } = useFormattedLabels.useFormattedLabels({
    data: data[0].series,
    labelFormatter: xAxisOptions.labelFormatter
  });
  const {
    formattedLabels: secondLabels
  } = useFormattedLabels.useFormattedLabels({
    data: data[1].series,
    labelFormatter: xAxisOptions.labelFormatter
  });

  if (isEqual__default["default"](firstLabels, secondLabels)) {
    return firstLabels;
  }

  const firstKeysMatch = firstLabels[0] === secondLabels[0];
  const lengthsMatch = firstLabels.length !== secondLabels.length;

  if (lengthsMatch) {
    if (firstKeysMatch) {
      return firstLabels.length > secondLabels.length ? firstLabels : secondLabels;
    }

    if (constants.WARN_FOR_DEVELOPMENT) {
      // eslint-disable-next-line no-console
      console.warn('Data groups do not have matching keys. Labels will not be rendered');
    }

    return [];
  } else {
    return firstKeysMatch ? firstLabels : [];
  }
}

exports.useGetLabelsFromDataGroups = useGetLabelsFromDataGroups;
