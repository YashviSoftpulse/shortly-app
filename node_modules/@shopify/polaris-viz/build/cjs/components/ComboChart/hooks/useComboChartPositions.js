'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');

function useComboChartPositions({
  leftTickWidth,
  primaryAxis,
  rightTickWidth,
  secondaryAxis,
  width
}) {
  const selectedTheme = polarisVizCore.useTheme();
  const horizontalMargin = selectedTheme.grid.horizontalMargin;
  const primaryLabelWidth = primaryAxis.name == null ? 0 : polarisVizCore.LINE_HEIGHT * 2;
  const secondaryLabelWidth = secondaryAxis.name == null ? 0 : polarisVizCore.LINE_HEIGHT;
  const leftTotalWidth = primaryLabelWidth + leftTickWidth + polarisVizCore.Y_AXIS_CHART_SPACING;
  const rightTotalWidth = polarisVizCore.Y_AXIS_CHART_SPACING + rightTickWidth + secondaryLabelWidth;
  const primaryLabelXPosition = horizontalMargin;
  const leftYAxisXPosition = primaryLabelXPosition + primaryLabelWidth;
  const chartXPosition = horizontalMargin + leftTotalWidth;
  const drawableWidth = width - chartXPosition - rightTotalWidth - horizontalMargin - secondaryLabelWidth;
  const rightAxisXPosition = chartXPosition + drawableWidth + polarisVizCore.Y_AXIS_CHART_SPACING;
  const secondaryLabelXPosition = rightAxisXPosition + rightTickWidth + secondaryLabelWidth;
  return {
    chartXPosition,
    drawableWidth,
    leftAxis: {
      x: leftYAxisXPosition,
      labelX: primaryLabelXPosition
    },
    rightAxis: {
      x: rightAxisXPosition,
      labelX: secondaryLabelXPosition
    }
  };
}

exports.useComboChartPositions = useComboChartPositions;
