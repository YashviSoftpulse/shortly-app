'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');
var flattenDataGroupToDataSeries = require('../../utilities/flattenDataGroupToDataSeries.js');
var Chart = require('./Chart.js');
var formatDataForTooltip = require('./utilities/formatDataForTooltip.js');
var jsxRuntime = require('react/jsx-runtime');
var getAxisOptions = require('../../utilities/getAxisOptions.js');
var normalizeData = require('../../utilities/normalizeData.js');
var ChartContainer = require('../ChartContainer/ChartContainer.js');
var TooltipContent = require('../TooltipContent/TooltipContent.js');

function ComboChart(props) {
  const {
    defaultTheme
  } = polarisVizCore.usePolarisVizContext();
  const {
    data,
    annotations = [],
    onError,
    id,
    isAnimated,
    renderTooltipContent,
    seriesNameFormatter = value => `${value}`,
    showLegend = true,
    theme = defaultTheme,
    xAxisOptions,
    renderLegendContent
  } = { ...polarisVizCore.DEFAULT_CHART_PROPS,
    ...props
  };
  const xAxisOptionsWithDefaults = getAxisOptions.getXAxisOptionsWithDefaults(xAxisOptions);
  const annotationsLookupTable = normalizeData.normalizeData(annotations, 'startKey');

  function renderTooltip(tooltipData) {
    if (renderTooltipContent != null) {
      return renderTooltipContent({ ...tooltipData,
        dataSeries: flattenDataGroupToDataSeries.flattenDataGroupToDataSeries(data)
      });
    }

    const {
      title,
      formattedData
    } = formatDataForTooltip.formatDataForTooltip({
      data: tooltipData,
      xAxisOptions: xAxisOptionsWithDefaults
    });
    return /*#__PURE__*/jsxRuntime.jsx(TooltipContent.TooltipContent, {
      data: formattedData,
      theme: theme,
      title: title
    });
  }

  return /*#__PURE__*/jsxRuntime.jsx(ChartContainer.ChartContainer, {
    data: data,
    onError: onError,
    id: id,
    isAnimated: isAnimated,
    theme: theme,
    type: polarisVizCore.InternalChartType.Combo,
    children: /*#__PURE__*/jsxRuntime.jsx(Chart.Chart, {
      annotationsLookupTable: annotationsLookupTable,
      data: data,
      renderTooltipContent: renderTooltip,
      seriesNameFormatter: seriesNameFormatter,
      showLegend: showLegend,
      theme: theme,
      xAxisOptions: xAxisOptionsWithDefaults,
      renderLegendContent: renderLegendContent
    })
  });
}

exports.ComboChart = ComboChart;
