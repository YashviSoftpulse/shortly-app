'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var FunnelChartXAxisArrows = require('./FunnelChartXAxisArrows.js');
var jsxRuntime = require('react/jsx-runtime');
var useLabels = require('../../Labels/hooks/useLabels.js');
var shouldSkipLabel = require('../../Labels/utilities/shouldSkipLabel.js');
var TextLine = require('../../TextLine/TextLine.js');

function FunnelChartXAxisLabels({
  allowLineWrap,
  chartX,
  chartY,
  labels,
  labelWidth,
  onHeightChange,
  reducedLabelIndexes,
  xScale
}) {
  const {
    lines
  } = useLabels.useLabels({
    allowLineWrap,
    labels,
    targetWidth: labelWidth,
    onHeightChange
  });
  return /*#__PURE__*/jsxRuntime.jsx(React.Fragment, {
    children: lines.map((line, index) => {
      var _xScale;

      if (shouldSkipLabel.shouldSkipLabel(index, reducedLabelIndexes)) {
        return null;
      }

      const x = (_xScale = xScale(index.toString())) !== null && _xScale !== void 0 ? _xScale : 0;
      return /*#__PURE__*/jsxRuntime.jsxs("g", {
        children: [index === 0 ? null : /*#__PURE__*/jsxRuntime.jsx(FunnelChartXAxisArrows.FunnelChartXAxisArrows, {
          onHeightChange: onHeightChange,
          x: x,
          index: index,
          chartX: chartX,
          chartY: chartY,
          labelWidth: labelWidth
        }), /*#__PURE__*/jsxRuntime.jsx("g", {
          transform: `translate(${chartX + x},${chartY})`,
          children: /*#__PURE__*/jsxRuntime.jsx(TextLine.TextLine, {
            line: line,
            index: index
          })
        }, index)]
      }, `label-group-${index}`);
    })
  });
}

exports.FunnelChartXAxisLabels = FunnelChartXAxisLabels;
