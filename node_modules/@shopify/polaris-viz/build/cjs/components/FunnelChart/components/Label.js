'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var web = require('@react-spring/web');
var Label$1 = require('./Label.scss.js');
var jsxRuntime = require('react/jsx-runtime');
var polarisVizCore = require('@shopify/polaris-viz-core');

const LABEL_HEIGHT = 20;
const LARGE_FONT = 20;
const SMALL_FONT = 14;
const FONT_SIZES = {
  small: SMALL_FONT,
  large: LARGE_FONT
};
function Label({
  label,
  labelWidth,
  labelHelper,
  size,
  color,
  backgroundColor,
  transform
}) {
  const fontSize = FONT_SIZES[size];
  return (
    /*#__PURE__*/

    /* To display labels correctly in Safari, we need to wrap foreignObject in group element
    and apply the transform property on the group element. */
    jsxRuntime.jsx(web.animated.g, {
      "aria-hidden": true,
      style: {
        transform
      },
      children: /*#__PURE__*/jsxRuntime.jsx("foreignObject", {
        height: LABEL_HEIGHT,
        width: labelWidth,
        "aria-hidden": "true",
        className: Label$1["default"].YAxis,
        children: /*#__PURE__*/jsxRuntime.jsxs("div", {
          className: Label$1["default"].Label,
          style: {
            fontSize: `${fontSize}px`,
            color,
            lineHeight: `${polarisVizCore.HORIZONTAL_BAR_LABEL_HEIGHT}px`
          },
          children: [/*#__PURE__*/jsxRuntime.jsx("span", {
            style: {
              backgroundColor,
              height: polarisVizCore.HORIZONTAL_BAR_LABEL_HEIGHT,
              userSelect: 'none'
            },
            children: label
          }), labelHelper]
        })
      })
    })
  );
}

exports.Label = Label;
