'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');
var fillMissingDataPoints = require('../../utilities/fillMissingDataPoints.js');
var Chart = require('./Chart.js');
var jsxRuntime = require('react/jsx-runtime');
var ChartContainer = require('../ChartContainer/ChartContainer.js');
var ChartSkeleton = require('../ChartSkeleton/ChartSkeleton.js');

function SparkLineChart(props) {
  const {
    defaultTheme
  } = polarisVizCore.usePolarisVizContext();
  const {
    data: dataSeries,
    accessibilityLabel,
    id,
    isAnimated,
    offsetLeft = 0,
    offsetRight = 0,
    onError,
    theme = defaultTheme,
    state,
    errorText
  } = { ...polarisVizCore.DEFAULT_CHART_PROPS,
    ...props
  };
  const data = fillMissingDataPoints.fillMissingDataPoints(dataSeries, true);
  return /*#__PURE__*/jsxRuntime.jsx(ChartContainer.ChartContainer, {
    id: id,
    isAnimated: isAnimated,
    data: data,
    theme: theme,
    sparkChart: true,
    onError: onError,
    children: state !== polarisVizCore.ChartState.Success ? /*#__PURE__*/jsxRuntime.jsx(ChartSkeleton.ChartSkeleton, {
      type: "Spark",
      state: state,
      errorText: errorText,
      theme: theme
    }) : /*#__PURE__*/jsxRuntime.jsx(Chart.Chart, {
      data: data,
      accessibilityLabel: accessibilityLabel,
      offsetLeft: offsetLeft,
      offsetRight: offsetRight,
      theme: theme
    })
  });
}

exports.SparkLineChart = SparkLineChart;
