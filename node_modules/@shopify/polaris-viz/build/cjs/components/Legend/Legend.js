'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var polarisVizCore = require('@shopify/polaris-viz-core');
var jsxRuntime = require('react/jsx-runtime');
var useExternalHideEvents = require('../../hooks/ExternalEvents/useExternalHideEvents.js');
var LegendItem = require('./components/LegendItem/LegendItem.js');

function Legend({
  activeIndex = -1,
  colorVisionType,
  data,
  theme = polarisVizCore.DEFAULT_THEME_NAME,
  itemDimensions,
  indexOffset = 0,
  backgroundColor,
  truncate = false,
  showLegendValues = false,
  seriesNameFormatter
}) {
  const {
    hiddenIndexes
  } = useExternalHideEvents.useExternalHideEvents();
  const onDimensionChange = React.useCallback((index, dimensions) => {
    if (itemDimensions !== null && itemDimensions !== void 0 && itemDimensions.current) {
      itemDimensions.current[index] = dimensions;
    }
  }, [itemDimensions]);
  const items = data.map((legend, index) => {
    if (hiddenIndexes.includes(index)) {
      return null;
    }

    return /*#__PURE__*/jsxRuntime.jsx(LegendItem.LegendItem, { ...legend,
      activeIndex: activeIndex,
      colorVisionType: colorVisionType,
      index: index + indexOffset,
      theme: theme,
      backgroundColor: backgroundColor,
      onDimensionChange: onDimensionChange,
      truncate: truncate,
      showLegendValues: showLegendValues,
      seriesNameFormatter: seriesNameFormatter
    }, index);
  });
  return /*#__PURE__*/jsxRuntime.jsx(React.Fragment, {
    children: items
  });
}

exports.Legend = Legend;
