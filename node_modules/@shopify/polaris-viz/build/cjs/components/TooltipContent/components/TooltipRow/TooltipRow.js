'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');
var constants = require('../../../../constants.js');
var constants$1 = require('../../constants.js');
var TooltipRow$1 = require('./TooltipRow.scss.js');
var jsxRuntime = require('react/jsx-runtime');
var SeriesIcon = require('../../../shared/SeriesIcon/SeriesIcon.js');

function TooltipRow({
  activeIndex,
  color,
  index,
  isComparison = false,
  isHidden = false,
  label,
  renderSeriesIcon,
  shape,
  value
}) {
  var _renderSeriesIcon;

  const selectedTheme = polarisVizCore.useTheme();

  if (isHidden) {
    return null;
  }

  return /*#__PURE__*/jsxRuntime.jsxs("div", {
    className: TooltipRow$1["default"].Row,
    style: polarisVizCore.getColorVisionStylesForActiveIndex({
      activeIndex,
      index
    }),
    children: [color != null && /*#__PURE__*/jsxRuntime.jsx("div", {
      style: {
        width: constants.PREVIEW_ICON_SIZE
      },
      children: (_renderSeriesIcon = renderSeriesIcon === null || renderSeriesIcon === void 0 ? void 0 : renderSeriesIcon()) !== null && _renderSeriesIcon !== void 0 ? _renderSeriesIcon : /*#__PURE__*/jsxRuntime.jsx(SeriesIcon.SeriesIcon, {
        color: color,
        isComparison: isComparison,
        shape: shape
      })
    }), /*#__PURE__*/jsxRuntime.jsx("span", {
      className: TooltipRow$1["default"].Truncate,
      style: {
        color: selectedTheme.tooltip.textColor,
        marginRight: constants$1.TITLE_MARGIN
      },
      children: label
    }), /*#__PURE__*/jsxRuntime.jsx("span", {
      className: TooltipRow$1["default"].Value,
      style: {
        color: selectedTheme.tooltip.textColor
      },
      children: value
    })]
  });
}

exports.TooltipRow = TooltipRow;
