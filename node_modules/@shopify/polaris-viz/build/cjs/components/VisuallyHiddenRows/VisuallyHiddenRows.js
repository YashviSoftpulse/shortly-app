'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var VisuallyHiddenRows$1 = require('./VisuallyHiddenRows.scss.js');
var jsxRuntime = require('react/jsx-runtime');

const VisuallyHiddenRows = /*#__PURE__*/React.memo(function Rows({
  data,
  formatYAxisLabel,
  xAxisLabels
}) {
  return /*#__PURE__*/jsxRuntime.jsxs(React.Fragment, {
    children: [/*#__PURE__*/jsxRuntime.jsxs("g", {
      role: "row",
      children: [/*#__PURE__*/jsxRuntime.jsx("text", {
        role: "rowheader"
      }), xAxisLabels.map((xAxisLabel, index) => {
        return /*#__PURE__*/jsxRuntime.jsx("text", {
          className: VisuallyHiddenRows$1["default"].VisuallyHidden,
          role: "columnheader",
          children: xAxisLabel
        }, `a11y-${xAxisLabel}-${index}`);
      })]
    }), data.map(({
      name,
      data
    }, index) => {
      return /*#__PURE__*/jsxRuntime.jsxs("g", {
        role: "row",
        children: [/*#__PURE__*/jsxRuntime.jsx("text", {
          role: "rowheader",
          className: VisuallyHiddenRows$1["default"].VisuallyHidden,
          children: name
        }), data.map(({
          value,
          key
        }, index) => {
          return /*#__PURE__*/jsxRuntime.jsx("text", {
            role: "cell",
            className: VisuallyHiddenRows$1["default"].VisuallyHidden,
            children: value == null ? '' : formatYAxisLabel(value)
          }, `cell-${name}-${value}-${key}-${index}`);
        })]
      }, `row-${name}-${index}`);
    })]
  });
});

exports.VisuallyHiddenRows = VisuallyHiddenRows;
