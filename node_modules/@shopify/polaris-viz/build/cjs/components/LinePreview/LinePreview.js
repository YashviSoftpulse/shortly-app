'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var polarisVizCore = require('@shopify/polaris-viz-core');
var constants = require('../../constants.js');
var constants$1 = require('./constants.js');
var LinePreview$1 = require('./LinePreview.scss.js');
var jsxRuntime = require('react/jsx-runtime');

const HEIGHT = 2;
const WIDTH = 2;
function LinePreview({
  color,
  lineStyle,
  width = WIDTH,
  strokeDasharray = 'none'
}) {
  const gradientId = React.useRef(polarisVizCore.uniqueId('linePreviewGradient'));
  const linePreviewColor = polarisVizCore.isGradientType(color) ? `url(#${gradientId.current})` : color;
  return /*#__PURE__*/jsxRuntime.jsx("span", {
    className: LinePreview$1["default"].Container,
    style: {
      height: HEIGHT,
      width: constants.PREVIEW_ICON_SIZE
    },
    children: /*#__PURE__*/jsxRuntime.jsxs("svg", {
      className: LinePreview$1["default"].SVG,
      height: `${HEIGHT}px`,
      viewBox: `0 0 ${constants.PREVIEW_ICON_SIZE} ${HEIGHT}`,
      width: `${constants.PREVIEW_ICON_SIZE}px`,
      xmlns: polarisVizCore.XMLNS,
      children: [polarisVizCore.isGradientType(color) ? /*#__PURE__*/jsxRuntime.jsx("defs", {
        children: /*#__PURE__*/jsxRuntime.jsx(polarisVizCore.LinearGradientWithStops, {
          id: gradientId.current,
          gradient: color,
          x1: "0%",
          x2: "100%",
          y1: "0%",
          y2: "0%",
          gradientUnits: "userSpaceOnUse"
        })
      }) : null, getLinePreview({
        color: linePreviewColor,
        lineStyle,
        width,
        strokeDasharray
      })]
    })
  });
}

function getLinePreview({
  color,
  lineStyle,
  width,
  strokeDasharray
}) {
  switch (lineStyle) {
    case 'dotted':
      return /*#__PURE__*/jsxRuntime.jsx("g", {
        fill: color,
        children: [...Array(3)].map((_, index) => {
          return /*#__PURE__*/jsxRuntime.jsx("circle", {
            cx: constants$1.DOTTED_LINE_PREVIEW_CY + index * constants$1.DOT_SPACING,
            cy: constants$1.DOTTED_LINE_PREVIEW_CY,
            r: constants$1.DOTTED_LINE_PREVIEW_RADIUS
          }, index);
        })
      });

    default:
      return /*#__PURE__*/jsxRuntime.jsx("path", {
        d: `M1 1 H${constants.PREVIEW_ICON_SIZE}`,
        stroke: color,
        strokeLinejoin: "round",
        strokeLinecap: "round",
        strokeWidth: width,
        strokeDasharray: strokeDasharray
      });
  }
}

exports.LinePreview = LinePreview;
