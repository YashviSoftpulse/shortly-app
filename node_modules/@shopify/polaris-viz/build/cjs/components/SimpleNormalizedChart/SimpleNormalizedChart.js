'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var polarisVizCore = require('@shopify/polaris-viz-core');
var Chart = require('./Chart.js');
var jsxRuntime = require('react/jsx-runtime');
var ChartContainer = require('../ChartContainer/ChartContainer.js');
var ChartSkeleton = require('../ChartSkeleton/ChartSkeleton.js');

function SimpleNormalizedChart(props) {
  const {
    defaultTheme
  } = polarisVizCore.usePolarisVizContext();
  const {
    comparisonMetrics = [],
    data,
    labelFormatter = value => `${value}`,
    legendPosition = 'top-left',
    seriesNameFormatter = value => `${value}`,
    direction = 'horizontal',
    size = 'small',
    showLegend = true,
    theme = defaultTheme,
    id,
    isAnimated,
    state,
    errorText,
    renderLegendContent,
    onError
  } = { ...polarisVizCore.DEFAULT_CHART_PROPS,
    ...props
  };
  return /*#__PURE__*/jsxRuntime.jsx(ChartContainer.ChartContainer, {
    data: data,
    theme: theme,
    id: id,
    isAnimated: isAnimated,
    onError: onError,
    children: state !== polarisVizCore.ChartState.Success ? /*#__PURE__*/jsxRuntime.jsx(ChartSkeleton.ChartSkeleton, {
      type: "SimpleNormalized",
      state: state,
      errorText: errorText,
      theme: theme,
      showLegend: showLegend && !renderLegendContent,
      size: size
    }) : /*#__PURE__*/jsxRuntime.jsx(Chart.Chart, {
      comparisonMetrics: comparisonMetrics,
      data: data,
      labelFormatter: labelFormatter,
      legendPosition: legendPosition,
      seriesNameFormatter: seriesNameFormatter,
      showLegend: showLegend,
      direction: direction,
      size: size,
      renderLegendContent: renderLegendContent
    })
  });
}

exports.SimpleNormalizedChart = SimpleNormalizedChart;
