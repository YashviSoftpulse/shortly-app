'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var web = require('@react-spring/web');
var polarisVizCore = require('@shopify/polaris-viz-core');
var getCSSBackgroundFromColor = require('../../../../utilities/getCSSBackgroundFromColor.js');
var useBarSpringConfig = require('../../../../hooks/useBarSpringConfig.js');
var BarSegment$1 = require('./BarSegment.scss.js');
var jsxRuntime = require('react/jsx-runtime');
var classnames = require('../../../../utilities/classnames.js');

const DELAY = 150;
function BarSegment({
  activeIndex,
  color,
  index,
  scale,
  size,
  direction,
  roundedCorners
}) {
  const {
    shouldAnimate
  } = polarisVizCore.useChartContext();
  const scaleNeedsRounding = scale > 0 && scale < 1.5;
  const safeScale = scaleNeedsRounding ? 1.5 : scale;
  const isMaxScale = scale >= 100;
  const delay = index * DELAY;
  const angle = direction === 'horizontal' ? 90 : 180;
  const dimension = direction === 'horizontal' ? 'width' : 'height';
  const backgroundColor = getCSSBackgroundFromColor.getCSSBackgroundFromColor(color, angle);
  const springConfig = useBarSpringConfig.useBarSpringConfig({
    animationDelay: delay
  });
  const spring = web.useSpring({
    from: {
      [dimension]: `0%`
    },
    to: {
      [dimension]: `${safeScale}%`
    },
    ...springConfig
  });
  return /*#__PURE__*/jsxRuntime.jsx(web.animated.div, {
    className: classnames.classNames(BarSegment$1["default"].Segment, roundedCorners && !isMaxScale && BarSegment$1["default"][`${direction}-RoundedCorners`], roundedCorners && isMaxScale && BarSegment$1["default"].RoundedCorners, BarSegment$1["default"][`${direction}-${size}`]),
    style: {
      [dimension]: shouldAnimate ? spring[dimension] : `${safeScale}%`,
      background: backgroundColor,
      ...polarisVizCore.getColorVisionStylesForActiveIndex({
        activeIndex,
        index
      })
    },
    ...polarisVizCore.getColorVisionEventAttrs({
      type: polarisVizCore.COLOR_VISION_SINGLE_ITEM,
      index
    }),
    tabIndex: 0
  });
}

exports.BarSegment = BarSegment;
