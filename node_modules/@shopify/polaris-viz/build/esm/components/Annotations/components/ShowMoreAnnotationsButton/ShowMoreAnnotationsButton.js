import { useChartContext, useTheme, estimateStringWidth, LINE_HEIGHT } from '@shopify/polaris-viz-core';
import { PILL_X_MIN, PILL_PADDING, PILL_HEIGHT } from '../../constants.js';
import styles from './ShowMoreAnnotationsButton.scss.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { Shadow } from './components/Shadow.js';
import { Icon } from './components/Icon.js';
import { SingleTextLine } from '../../../Labels/SingleTextLine.js';

const STROKE = 2;
function ShowMoreAnnotationsButton({
  annotationsCount,
  collapseText = 'Collapse annotations',
  expandText = 'Expand annotations',
  isShowingAllAnnotations,
  onClick,
  tabIndex,
  width
}) {
  const {
    characterWidths
  } = useChartContext();
  const selectedTheme = useTheme();
  const label = isShowingAllAnnotations ? collapseText : `${expandText} (${annotationsCount})`;
  const textWidth = estimateStringWidth(label, characterWidths);
  const radius = PILL_HEIGHT / 2;
  const pillWidth = width + Math.abs(PILL_X_MIN);
  const pillHeight = PILL_HEIGHT + STROKE;
  return /*#__PURE__*/jsxs("g", {
    className: styles.Button,
    transform: `translate(${PILL_X_MIN},-1)`,
    onClick: onClick,
    tabIndex: 0,
    children: [!isShowingAllAnnotations && /*#__PURE__*/jsx(Shadow, {
      height: pillHeight,
      width: pillWidth,
      fill: selectedTheme.annotations.backgroundColor,
      radius: radius
    }), /*#__PURE__*/jsx("rect", {
      height: pillHeight,
      width: pillWidth,
      fill: isShowingAllAnnotations ? 'transparent' : selectedTheme.annotations.backgroundColor,
      ry: radius,
      stroke: isShowingAllAnnotations ? selectedTheme.annotations.backgroundColor : selectedTheme.chartContainer.backgroundColor,
      strokeWidth: STROKE
    }), /*#__PURE__*/jsx(Icon, {
      fill: selectedTheme.annotations.textColor,
      isShowingAllAnnotations: isShowingAllAnnotations
    }), /*#__PURE__*/jsx(SingleTextLine, {
      color: selectedTheme.annotations.textColor,
      text: label,
      targetWidth: pillWidth - PILL_PADDING * 2,
      y: PILL_HEIGHT - LINE_HEIGHT,
      x: pillWidth / 2 - textWidth / 2
    }), /*#__PURE__*/jsx("foreignObject", {
      height: PILL_HEIGHT,
      width: pillWidth,
      style: {
        overflow: 'visible'
      },
      children: /*#__PURE__*/jsx("button", {
        className: styles.Button,
        onClick: onClick,
        style: {
          borderRadius: PILL_HEIGHT / 2
        },
        tabIndex: tabIndex,
        children: label
      })
    })]
  });
}

export { ShowMoreAnnotationsButton };
