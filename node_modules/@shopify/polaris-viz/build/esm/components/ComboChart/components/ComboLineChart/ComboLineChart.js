import { useState, Fragment } from 'react';
import { COLOR_VISION_SINGLE_ITEM, LineSeries } from '@shopify/polaris-viz-core';
import { getLineChartDataWithDefaults } from '../../../../utilities/getLineChartDataWithDefaults.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { useWatchColorVisionEvents } from '../../../../hooks/ColorVisionA11y/useWatchColorVisionEvents.js';
import { useFormatData } from '../../../LineChart/hooks/useFormatData.js';
import { PointsAndCrosshair } from '../../../LineChart/components/PointsAndCrosshair/PointsAndCrosshair.js';

function ComboLineChart({
  activeIndex,
  colors,
  data,
  drawableHeight,
  drawableWidth,
  indexOffset,
  theme,
  xScale,
  yScale
}) {
  const [activeLineIndex, setActiveLineIndex] = useState(-1);
  useWatchColorVisionEvents({
    type: COLOR_VISION_SINGLE_ITEM,
    onIndexChange: ({
      detail
    }) => setActiveLineIndex(detail.index)
  });
  const dataWithDefaults = getLineChartDataWithDefaults(data.series, colors);
  const {
    longestSeriesIndex
  } = useFormatData(dataWithDefaults);
  return /*#__PURE__*/jsxs(Fragment, {
    children: [dataWithDefaults.map((singleSeries, index) => {
      return /*#__PURE__*/jsx(LineSeries, {
        activeLineIndex: activeLineIndex,
        data: singleSeries,
        index: index + indexOffset,
        svgDimensions: {
          height: drawableHeight,
          width: drawableWidth
        },
        theme: theme,
        xScale: xScale,
        yScale: yScale,
        type: "default"
      }, `${name}-${index}`);
    }), /*#__PURE__*/jsx(PointsAndCrosshair, {
      activeIndex: activeIndex,
      data: dataWithDefaults,
      drawableHeight: drawableHeight,
      emptyState: false,
      longestSeriesIndex: longestSeriesIndex,
      theme: theme,
      tooltipId: "none",
      xScale: xScale,
      yScale: yScale
    })]
  });
}

export { ComboLineChart };
