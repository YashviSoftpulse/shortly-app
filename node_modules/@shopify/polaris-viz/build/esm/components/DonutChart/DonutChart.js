import { usePolarisVizContext, DEFAULT_CHART_PROPS } from '@shopify/polaris-viz-core';
import { bucketDataSeries } from '../../utilities/bucketDataSeries.js';
import { Chart } from './Chart.js';
import { jsx } from 'react/jsx-runtime';
import { ChartContainer } from '../ChartContainer/ChartContainer.js';

function DonutChart(props) {
  const {
    defaultTheme
  } = usePolarisVizContext();
  const {
    data: dataSeries,
    theme = defaultTheme,
    comparisonMetric,
    showLegend = true,
    maxSeries,
    showLegendValues = false,
    labelFormatter = value => `${value}`,
    legendFullWidth,
    legendPosition = 'left',
    onError,
    id,
    isAnimated,
    state,
    errorText,
    renderInnerValueContent,
    renderLegendContent,
    renderHiddenLegendLabel,
    renderBucketLegendLabel,
    seriesNameFormatter = value => `${value}`
  } = { ...DEFAULT_CHART_PROPS,
    ...props
  };
  const data = maxSeries ? bucketDataSeries({
    dataSeries,
    maxSeries,
    renderBucketLegendLabel
  }) : dataSeries;
  return /*#__PURE__*/jsx(ChartContainer, {
    skeletonType: "Donut",
    data: data,
    onError: onError,
    theme: theme,
    isAnimated: isAnimated,
    id: id,
    children: /*#__PURE__*/jsx(Chart, {
      errorText: errorText,
      state: state,
      data: data,
      labelFormatter: labelFormatter,
      comparisonMetric: comparisonMetric,
      showLegend: showLegend,
      showLegendValues: showLegendValues,
      legendFullWidth: legendFullWidth,
      legendPosition: legendPosition,
      renderInnerValueContent: renderInnerValueContent,
      renderLegendContent: renderLegendContent,
      renderHiddenLegendLabel: renderHiddenLegendLabel,
      seriesNameFormatter: seriesNameFormatter,
      theme: theme
    })
  });
}

export { DonutChart };
