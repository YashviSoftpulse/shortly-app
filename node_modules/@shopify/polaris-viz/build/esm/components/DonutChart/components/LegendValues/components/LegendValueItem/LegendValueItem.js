import { useTheme } from '@shopify/polaris-viz-core';
import { useRef, useEffect } from 'react';
import styles from './LegendValueItem.scss.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { SquareColorPreview } from '../../../../../SquareColorPreview/SquareColorPreview.js';
import { TrendIndicator } from '../../../../../TrendIndicator/TrendIndicator.js';

function LegendValueItem({
  name,
  value,
  index,
  labelFormatter,
  longestLegendValueWidth,
  trend,
  seriesColors,
  seriesNameFormatter,
  maxTrendIndicatorWidth,
  onDimensionChange,
  getColorVisionStyles,
  getColorVisionEventAttrs
}) {
  const selectedTheme = useTheme();
  const ref = useRef(null);
  const minWidth = 200;
  useEffect(() => {
    if (onDimensionChange && ref.current != null) {
      const {
        width,
        height
      } = ref.current.getBoundingClientRect();
      onDimensionChange({
        width: Math.min(minWidth, Math.round(width)),
        height
      });
    }
  }, [onDimensionChange, ref, minWidth]);
  const valueExists = value !== null && value !== undefined;
  return /*#__PURE__*/jsxs("tr", {
    ref: ref,
    style: { ...getColorVisionStyles(index)
    },
    ...getColorVisionEventAttrs(index),
    children: [/*#__PURE__*/jsx("td", {
      className: styles.ColorPreview,
      children: /*#__PURE__*/jsx(SquareColorPreview, {
        color: seriesColors[index]
      })
    }), /*#__PURE__*/jsx("td", {
      className: styles.Name,
      style: {
        color: selectedTheme.legend.labelColor
      },
      title: name,
      children: /*#__PURE__*/jsx("span", {
        children: seriesNameFormatter(name)
      })
    }), /*#__PURE__*/jsx("td", {
      className: styles.alignRight,
      width: longestLegendValueWidth,
      children: /*#__PURE__*/jsx("span", {
        style: {
          color: selectedTheme.legend.labelColor
        },
        children: valueExists ? labelFormatter(value) : '-'
      })
    }), trend && valueExists && /*#__PURE__*/jsx("td", {
      className: styles.alignLeft,
      width: maxTrendIndicatorWidth,
      style: {
        minWidth: maxTrendIndicatorWidth,
        paddingLeft: '4px'
      },
      children: /*#__PURE__*/jsx("span", {
        children: /*#__PURE__*/jsx(TrendIndicator, { ...trend
        })
      })
    })]
  }, name);
}

export { LegendValueItem };
