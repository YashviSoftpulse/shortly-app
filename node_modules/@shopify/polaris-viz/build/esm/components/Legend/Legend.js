import { useCallback, Fragment } from 'react';
import { DEFAULT_THEME_NAME } from '@shopify/polaris-viz-core';
import { jsx } from 'react/jsx-runtime';
import { useExternalHideEvents } from '../../hooks/ExternalEvents/useExternalHideEvents.js';
import { LegendItem } from './components/LegendItem/LegendItem.js';

function Legend({
  activeIndex = -1,
  colorVisionType,
  data,
  theme = DEFAULT_THEME_NAME,
  itemDimensions,
  indexOffset = 0,
  backgroundColor,
  truncate = false,
  showLegendValues = false,
  seriesNameFormatter
}) {
  const {
    hiddenIndexes
  } = useExternalHideEvents();
  const onDimensionChange = useCallback((index, dimensions) => {
    if (itemDimensions !== null && itemDimensions !== void 0 && itemDimensions.current) {
      itemDimensions.current[index] = dimensions;
    }
  }, [itemDimensions]);
  const items = data.map((legend, index) => {
    if (hiddenIndexes.includes(index)) {
      return null;
    }

    return /*#__PURE__*/jsx(LegendItem, { ...legend,
      activeIndex: activeIndex,
      colorVisionType: colorVisionType,
      index: index + indexOffset,
      theme: theme,
      backgroundColor: backgroundColor,
      onDimensionChange: onDimensionChange,
      truncate: truncate,
      showLegendValues: showLegendValues,
      seriesNameFormatter: seriesNameFormatter
    }, index);
  });
  return /*#__PURE__*/jsx(Fragment, {
    children: items
  });
}

export { Legend };
