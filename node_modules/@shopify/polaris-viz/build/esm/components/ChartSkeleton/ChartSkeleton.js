import { ChartState, useTheme } from '@shopify/polaris-viz-core';
import styles from './ChartSkeleton.scss.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { Shimmer } from './components/Shimmer/Shimmer.js';
import { GridSkeleton } from './components/GridSkeleton/GridSkeleton.js';
import { SparkSkeleton } from './components/SparkSkeleton/SparkSkeleton.js';
import { SimpleNormalizedSkeleton } from './components/SimpleNormalizedSkeleton/SimpleNormalizedSkeleton.js';
import { SimpleBarSkeleton } from './components/SimpleBarSkeleton/SimpleBarSkeleton.js';
import { FunnelSkeleton } from './components/FunnelSkeleton/FunnelSkeleton.js';
import { DonutSkeleton } from './components/DonutSkeleton/DonutSkeleton.js';

function ChartSkeleton(props) {
  const {
    dimensions,
    errorText = 'Could not load the chart',
    state = ChartState.Loading,
    theme,
    type
  } = props;
  const {
    chartContainer: {
      backgroundColor
    }
  } = useTheme(theme);
  const {
    width,
    height
  } = dimensions || {
    width: 0,
    height: 0
  };

  const SkeletonMarkup = () => {
    switch (type) {
      case 'Donut':
        return /*#__PURE__*/jsx(DonutSkeleton, {
          dimensions: {
            width,
            height
          },
          state: state,
          errorText: errorText
        });

      case 'Funnel':
        return /*#__PURE__*/jsx(FunnelSkeleton, {
          dimensions: {
            width,
            height
          },
          state: state,
          errorText: errorText
        });

      case 'SimpleBar':
        return /*#__PURE__*/jsx(SimpleBarSkeleton, {
          dimensions: {
            width,
            height
          },
          state: state,
          errorText: errorText
        });

      case 'SimpleNormalized':
        {
          const {
            showLegend = true,
            size = 'small'
          } = props;
          return /*#__PURE__*/jsx(SimpleNormalizedSkeleton, {
            dimensions: {
              width,
              height
            },
            state: state,
            errorText: errorText,
            showLegend: showLegend,
            size: size
          });
        }

      case 'Spark':
        return /*#__PURE__*/jsx(SparkSkeleton, {
          dimensions: {
            width,
            height
          },
          state: state,
          errorText: errorText
        });

      default:
        return /*#__PURE__*/jsx(GridSkeleton, {
          dimensions: {
            width,
            height
          },
          state: state,
          errorText: errorText
        });
    }
  };

  if (width === 0) return null;
  return /*#__PURE__*/jsxs("div", {
    className: styles.Container,
    children: [/*#__PURE__*/jsx(SkeletonMarkup, {}), state === ChartState.Loading && /*#__PURE__*/jsx(Shimmer, {
      backgroundColor: backgroundColor,
      width: width,
      height: height
    })]
  });
}

export { ChartSkeleton };
