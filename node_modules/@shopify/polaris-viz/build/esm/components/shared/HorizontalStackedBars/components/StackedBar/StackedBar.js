import { useSpring, animated } from '@react-spring/web';
import { getRoundedRectPath, getColorVisionStylesForActiveIndex, STACKED_BAR_GAP, getColorVisionEventAttrs, COLOR_VISION_SINGLE_ITEM } from '@shopify/polaris-viz-core';
import { useBarSpringConfig } from '../../../../../hooks/useBarSpringConfig.js';
import { jsxs, jsx } from 'react/jsx-runtime';

function StackedBar({
  animationDelay,
  activeBarIndex,
  ariaLabel,
  borderRadius,
  color,
  height,
  seriesIndex,
  setActiveBarIndex,
  width,
  x,
  zeroPosition
}) {
  const springConfig = useBarSpringConfig({
    animationDelay
  });
  const {
    transform
  } = useSpring({
    from: {
      transform: `scale(0, 1)`
    },
    to: {
      transform: `scale(1, 1)`
    },
    ...springConfig
  });
  const pathD = getRoundedRectPath({
    height,
    width,
    borderRadius
  });
  return /*#__PURE__*/jsxs(animated.g, {
    style: {
      transform,
      transformOrigin: `${zeroPosition}px 0px`
    },
    children: [/*#__PURE__*/jsx("path", {
      d: pathD,
      fill: `url(#${color})`,
      height: height,
      style: {
        outline: 'none',
        transformOrigin: `${x}px 0px`,
        ...getColorVisionStylesForActiveIndex({
          activeIndex: activeBarIndex,
          index: seriesIndex
        })
      },
      width: width,
      transform: `translate(${x},0)`,
      "aria-hidden": "true"
    }), /*#__PURE__*/jsx("rect", {
      fill: "transparent",
      height: height,
      width: width + STACKED_BAR_GAP,
      x: x,
      ...getColorVisionEventAttrs({
        type: COLOR_VISION_SINGLE_ITEM,
        index: seriesIndex
      }),
      "aria-label": ariaLabel,
      role: "img",
      tabIndex: -1,
      onMouseOver: () => setActiveBarIndex(seriesIndex),
      onMouseLeave: () => setActiveBarIndex(-1)
    })]
  });
}

export { StackedBar };
