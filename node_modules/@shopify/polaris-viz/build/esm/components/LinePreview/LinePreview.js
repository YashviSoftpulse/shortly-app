import { useRef } from 'react';
import { uniqueId, isGradientType, XMLNS, LinearGradientWithStops } from '@shopify/polaris-viz-core';
import { PREVIEW_ICON_SIZE } from '../../constants.js';
import { DOTTED_LINE_PREVIEW_CY, DOT_SPACING, DOTTED_LINE_PREVIEW_RADIUS } from './constants.js';
import styles from './LinePreview.scss.js';
import { jsx, jsxs } from 'react/jsx-runtime';

const HEIGHT = 2;
const WIDTH = 2;
function LinePreview({
  color,
  lineStyle,
  width = WIDTH,
  strokeDasharray = 'none'
}) {
  const gradientId = useRef(uniqueId('linePreviewGradient'));
  const linePreviewColor = isGradientType(color) ? `url(#${gradientId.current})` : color;
  return /*#__PURE__*/jsx("span", {
    className: styles.Container,
    style: {
      height: HEIGHT,
      width: PREVIEW_ICON_SIZE
    },
    children: /*#__PURE__*/jsxs("svg", {
      className: styles.SVG,
      height: `${HEIGHT}px`,
      viewBox: `0 0 ${PREVIEW_ICON_SIZE} ${HEIGHT}`,
      width: `${PREVIEW_ICON_SIZE}px`,
      xmlns: XMLNS,
      children: [isGradientType(color) ? /*#__PURE__*/jsx("defs", {
        children: /*#__PURE__*/jsx(LinearGradientWithStops, {
          id: gradientId.current,
          gradient: color,
          x1: "0%",
          x2: "100%",
          y1: "0%",
          y2: "0%",
          gradientUnits: "userSpaceOnUse"
        })
      }) : null, getLinePreview({
        color: linePreviewColor,
        lineStyle,
        width,
        strokeDasharray
      })]
    })
  });
}

function getLinePreview({
  color,
  lineStyle,
  width,
  strokeDasharray
}) {
  switch (lineStyle) {
    case 'dotted':
      return /*#__PURE__*/jsx("g", {
        fill: color,
        children: [...Array(3)].map((_, index) => {
          return /*#__PURE__*/jsx("circle", {
            cx: DOTTED_LINE_PREVIEW_CY + index * DOT_SPACING,
            cy: DOTTED_LINE_PREVIEW_CY,
            r: DOTTED_LINE_PREVIEW_RADIUS
          }, index);
        })
      });

    default:
      return /*#__PURE__*/jsx("path", {
        d: `M1 1 H${PREVIEW_ICON_SIZE}`,
        stroke: color,
        strokeLinejoin: "round",
        strokeLinecap: "round",
        strokeWidth: width,
        strokeDasharray: strokeDasharray
      });
  }
}

export { LinePreview };
