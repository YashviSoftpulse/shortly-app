import { useTheme, useChartContext, estimateStringWidth, clamp, LINE_HEIGHT } from '@shopify/polaris-viz-core';
import { jsx, jsxs } from 'react/jsx-runtime';
import { SingleTextLine } from '../Labels/SingleTextLine.js';

const PADDING_SIZE = 2;
function YAxis({
  ticks,
  width,
  textAlign,
  ariaHidden = false,
  x,
  y
}) {
  const selectedTheme = useTheme();
  const {
    characterWidths
  } = useChartContext();
  return /*#__PURE__*/jsx("g", {
    transform: `translate(${x},${y})`,
    "aria-hidden": "true",
    children: ticks.map(({
      value,
      formattedValue,
      yOffset
    }) => {
      const stringWidth = estimateStringWidth(formattedValue, characterWidths);
      const clampedWidth = clamp({
        amount: width,
        min: width + PADDING_SIZE,
        max: stringWidth
      });
      const x = textAlign === 'right' ? width - clampedWidth : 0;
      return /*#__PURE__*/jsxs("g", {
        transform: `translate(${x},${yOffset})`,
        children: [/*#__PURE__*/jsx("rect", {
          height: LINE_HEIGHT,
          width: clampedWidth + PADDING_SIZE,
          fill: selectedTheme.chartContainer.backgroundColor,
          y: -LINE_HEIGHT / 2,
          x: -PADDING_SIZE
        }), /*#__PURE__*/jsx(SingleTextLine, {
          x: 0,
          y: 0,
          ariaHidden: ariaHidden,
          color: selectedTheme.yAxis.labelColor,
          targetWidth: clampedWidth,
          text: formattedValue,
          textAnchor: "left",
          dominantBaseline: "middle"
        })]
      }, value);
    })
  });
}

export { YAxis };
