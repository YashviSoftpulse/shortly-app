import { isGradientType, getAverageColor, changeColorOpacity, STROKE_DOT_ARRAY_WIDTH } from '@shopify/polaris-viz-core';
import { getOpacityByDataLength } from './getOpacityByLength.js';

function getLineChartDataWithDefaults(data, colors) {
  const areaOpacity = getOpacityByDataLength(data.length);
  const dataWithDefaults = data.map((series, index) => {
    var _series$color, _series$styleOverride, _series$styleOverride2;

    const seriesColor = colors[index];
    const areaColor = isGradientType(seriesColor) ? getAverageColor(seriesColor[0].color, seriesColor[seriesColor.length - 1].color) : seriesColor;
    return { ...series,
      areaColor: series.isComparison ? undefined : changeColorOpacity(areaColor, areaOpacity),
      // We want to override the color, not set a default
      // so it has to come last
      color: series.isComparison ? colors[index] : (_series$color = series.color) !== null && _series$color !== void 0 ? _series$color : colors[index],
      strokeDasharray: getStrokeDasharray(series),
      width: (_series$styleOverride = series.styleOverride) === null || _series$styleOverride === void 0 ? void 0 : (_series$styleOverride2 = _series$styleOverride.line) === null || _series$styleOverride2 === void 0 ? void 0 : _series$styleOverride2.width
    };
  });
  return dataWithDefaults;
}

function getStrokeDasharray(series) {
  var _series$styleOverride3, _series$styleOverride4;

  if (((_series$styleOverride3 = series.styleOverride) === null || _series$styleOverride3 === void 0 ? void 0 : (_series$styleOverride4 = _series$styleOverride3.line) === null || _series$styleOverride4 === void 0 ? void 0 : _series$styleOverride4.strokeDasharray) != null) {
    return series.styleOverride.line.strokeDasharray;
  }

  return series.isComparison ? STROKE_DOT_ARRAY_WIDTH : 'none';
}

export { getLineChartDataWithDefaults };
