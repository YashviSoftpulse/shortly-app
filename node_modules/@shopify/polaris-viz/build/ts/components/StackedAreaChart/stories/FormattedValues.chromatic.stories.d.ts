/// <reference types="react" />
import type { Story } from '@storybook/react';
import type { StackedAreaChartProps } from '../../../components';
declare const _default: {
    title: string;
    parameters: {
        chromatic: {
            disableSnapshot: boolean;
        };
    };
    decorators?: import("@storybook/csf").DecoratorFunction<import("@storybook/react").ReactFramework, import("@storybook/react").Args>[] | undefined;
    args?: Partial<import("@storybook/react").Args> | undefined;
    argTypes?: Partial<import("@storybook/react").ArgTypes<import("@storybook/react").Args>> | undefined;
    loaders?: import("@storybook/csf").LoaderFunction<import("@storybook/react").ReactFramework, import("@storybook/react").Args>[] | undefined;
    render?: import("@storybook/csf").ArgsStoryFn<import("@storybook/react").ReactFramework, import("@storybook/react").Args> | undefined;
    id?: string | undefined;
    includeStories?: (RegExp | string[]) | undefined;
    excludeStories?: (RegExp | string[]) | undefined;
    component?: import("react").ComponentType<any> | undefined;
    subcomponents?: Record<string, import("react").ComponentType<any>> | undefined;
};
export default _default;
export declare const FormattedValues: Story<StackedAreaChartProps>;
//# sourceMappingURL=FormattedValues.chromatic.stories.d.ts.map