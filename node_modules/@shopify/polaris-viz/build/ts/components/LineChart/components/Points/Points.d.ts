/// <reference types="react" />
import type { Interpolation } from '@react-spring/web';
import type { ScaleLinear } from 'd3-scale';
import type { LineChartDataSeriesWithDefaults } from '@shopify/polaris-viz-core';
import type { AnimatedCoordinate } from '../../../../types';
interface PointsProps {
    activeIndex: number | null;
    animatedCoordinates: AnimatedCoordinate[] | null;
    data: LineChartDataSeriesWithDefaults[];
    gradientId: string;
    longestSeriesIndex: number;
    tooltipId: string;
    getXPosition: ({ isCrosshair }: {
        isCrosshair: boolean;
    }) => number | Interpolation<DOMPoint | {
        x: number;
        y: number;
    }, number>;
    xScale: ScaleLinear<number, number>;
    yScale: ScaleLinear<number, number>;
    hiddenIndexes?: number[];
}
export declare function Points({ activeIndex, animatedCoordinates, data, getXPosition, gradientId, hiddenIndexes, longestSeriesIndex, tooltipId, xScale, yScale, }: PointsProps): JSX.Element;
export {};
//# sourceMappingURL=Points.d.ts.map