import { useMemo } from 'react';

function useFormattedLabels({
  data,
  labelFormatter
}) {
  return useMemo(() => {
    const formattedLabels = [];
    const unformattedLabels = [];

    if (data == null || data.length === 0) {
      return {
        formattedLabels,
        unformattedLabels
      };
    }

    data.forEach(series => {
      if (series == null || series.data == null) {
        return;
      }

      series.data.forEach(({
        key
      }, index) => {
        var _labelFormatter;

        formattedLabels[index] = (_labelFormatter = labelFormatter === null || labelFormatter === void 0 ? void 0 : labelFormatter(`${key}`)) !== null && _labelFormatter !== void 0 ? _labelFormatter : `${key}`;
        unformattedLabels[index] = `${key}`;
      });
    });
    return {
      formattedLabels,
      unformattedLabels
    };
  }, [data, labelFormatter]);
}

export { useFormattedLabels };
