import { useState, useLayoutEffect } from 'react';
import { ResizeObserver } from '@juggle/resize-observer';

const defaultEntry = process.env.NODE_ENV === 'test' ? {
  contentRect: {
    width: 500,
    height: 500
  }
} : null;

function resizeObserver(callback) {
  if (typeof window === 'undefined') {
    return ResizeObserver;
  }

  return new (window.ResizeObserver || ResizeObserver)(callback);
}

const useResizeObserver = () => {
  const [ref, setRef] = useState(null);
  const [entry, setEntry] = useState(defaultEntry);
  useLayoutEffect(() => {
    if (!ref) {
      return;
    }

    const observer = resizeObserver(([entry]) => setEntry(entry));
    observer.observe(ref);
    return () => {
      observer.disconnect();
    };
  }, [ref, setEntry]);
  return {
    ref,
    setRef,
    entry
  };
};

export { useResizeObserver };
