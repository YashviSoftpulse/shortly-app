import { stack } from 'd3-shape';

function getKey(index, name) {
  return `${name !== null && name !== void 0 ? name : 'stack'}-${index}`;
}

function getStackedValues({
  series,
  labels,
  order,
  offset
}) {
  const stackedValues = stack().offset(offset).order(order).keys(series.map(({
    name
  }, index) => getKey(index, name)));
  const formattedData = labels.map((_, labelIndex) => series.reduce((acc, {
    name,
    data
  }, index) => {
    const indexData = data[labelIndex];
    const namedData = {
      [getKey(index, name)]: indexData.value == null ? 0 : indexData.value
    };
    return Object.assign(acc, namedData);
  }, {}));
  return stackedValues(formattedData);
}

export { getStackedValues };
