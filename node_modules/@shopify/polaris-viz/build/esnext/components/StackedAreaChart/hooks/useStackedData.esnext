import { useMemo } from 'react';
import { stackOrderReverse, stackOffsetNone } from 'd3-shape';
import { useIndexForLabels } from '../../../hooks/useIndexForLabels.esnext';
import { getStackedValues } from '../../../utilities/getStackedValues.esnext';
import { useFormattedLabels } from '../../../hooks/useFormattedLabels.esnext';

function useStackedData({
  data,
  xAxisOptions
}) {
  const indexForLabels = useIndexForLabels(data);
  const {
    formattedLabels
  } = useFormattedLabels({
    data: [data[indexForLabels]],
    labelFormatter: xAxisOptions.labelFormatter
  });
  const stackedValues = getStackedValues({
    series: data,
    labels: formattedLabels,
    order: stackOrderReverse,
    offset: stackOffsetNone
  });
  const longestSeriesLength = useMemo(() => {
    return Math.max(...stackedValues.map(stack => stack.length)) - 1;
  }, [stackedValues]);
  const longestSeriesIndex = useMemo(() => data.reduce((maxIndex, currentSeries, currentIndex) => {
    return data[maxIndex].data.length < currentSeries.data.length ? currentIndex : maxIndex;
  }, 0), [data]);
  return {
    labels: formattedLabels,
    longestSeriesIndex,
    longestSeriesLength,
    stackedValues
  };
}

export { useStackedData };
