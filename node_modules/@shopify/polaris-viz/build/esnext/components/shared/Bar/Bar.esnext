import { memo, useCallback } from 'react';
import { useSpring, animated } from '@react-spring/web';
import { useTheme, getRoundedRectPath, DataType, COLOR_VISION_ACTIVE_OPACITY, COLOR_VISION_FADED_OPACITY } from '@shopify/polaris-viz-core';
import { useBarSpringConfig } from '../../../hooks/useBarSpringConfig.esnext';
import styles from './Bar.scss.esnext';
import { jsx } from 'react/jsx-runtime';
import { ZeroValueLine } from '../ZeroValueLine/ZeroValueLine.esnext';

const Bar = /*#__PURE__*/memo(function Bar({
  animationDelay = 0,
  areAllNegative,
  ariaLabel,
  color,
  height,
  index,
  isActive = true,
  transform,
  width,
  x,
  y
}) {
  const selectedTheme = useTheme();
  const borderRadius = `0 ${selectedTheme.bar.borderRadius} ${selectedTheme.bar.borderRadius} 0`;
  const getPath = useCallback((height = 0, width = 0) => {
    return getRoundedRectPath({
      height,
      width,
      borderRadius
    });
  }, [borderRadius]);
  const springConfig = useBarSpringConfig({
    animationDelay
  });
  const spring = useSpring({
    from: {
      pathD: getPath(height, 1)
    },
    to: {
      pathD: getPath(height, width)
    },
    ...springConfig
  });
  const ariaHidden = !ariaLabel;
  return /*#__PURE__*/jsx("g", {
    className: styles.Group,
    "aria-hidden": ariaHidden,
    role: "img",
    "aria-label": ariaLabel,
    transform: `translate(${x}, ${y})`,
    children: width !== 0 ? /*#__PURE__*/jsx(animated.path, {
      d: spring.pathD,
      "data-id": `bar-${index}`,
      "data-index": index,
      "data-type": DataType.Bar,
      fill: color,
      "aria-hidden": "true",
      style: {
        transform,
        opacity: isActive ? COLOR_VISION_ACTIVE_OPACITY : COLOR_VISION_FADED_OPACITY
      },
      className: styles.Bar
    }) : /*#__PURE__*/jsx(animated.g, {
      style: {
        transform: `translate(${x}px, ${-y}px)`
      },
      children: /*#__PURE__*/jsx(ZeroValueLine, {
        x: x,
        y: y + height / 2,
        direction: "horizontal",
        areAllNegative: areAllNegative
      })
    })
  });
});

export { Bar };
