import styles from './CustomLegend.scss.esnext';
import { jsxs, jsx } from 'react/jsx-runtime';
import { LegendItem } from '../../../Legend/components/LegendItem/LegendItem.esnext';

function CustomLegend({
  data,
  getColorVisionEventAttrs,
  getColorVisionStyles,
  seriesNameFormatter,
  theme
}) {
  var _percentileItems$0$co, _percentileItems$, _percentileItems$$met, _percentileItems$2, _percentileItems$2$me;

  const lineSeries = data.filter(series => {
    var _series$metadata;

    return (series === null || series === void 0 ? void 0 : (_series$metadata = series.metadata) === null || _series$metadata === void 0 ? void 0 : _series$metadata.relatedIndex) == null;
  });
  const percentileItems = data.filter(series => {
    var _series$metadata2;

    return (series === null || series === void 0 ? void 0 : (_series$metadata2 = series.metadata) === null || _series$metadata2 === void 0 ? void 0 : _series$metadata2.relatedIndex) != null;
  });
  const percentileIndex = lineSeries.length + 1;
  return /*#__PURE__*/jsxs("ul", {
    className: styles.Container,
    children: [lineSeries.map(({
      color,
      name,
      isComparison,
      metadata
    }) => {
      if (metadata !== null && metadata !== void 0 && metadata.isPredictive) {
        return null;
      }

      const index = data.findIndex(series => series.name === name);
      return /*#__PURE__*/jsx("li", {
        style: { ...getColorVisionStyles(index)
        },
        ...getColorVisionEventAttrs(index),
        children: /*#__PURE__*/jsx(LegendItem, {
          color: color,
          index: index,
          isComparison: isComparison,
          name: seriesNameFormatter(name !== null && name !== void 0 ? name : ''),
          shape: "Line",
          theme: theme
        })
      }, index);
    }), /*#__PURE__*/jsx("li", {
      style: { ...getColorVisionStyles(percentileIndex)
      },
      ...getColorVisionEventAttrs(percentileIndex),
      children: /*#__PURE__*/jsx(LegendItem, {
        color: (_percentileItems$0$co = percentileItems[0].color) !== null && _percentileItems$0$co !== void 0 ? _percentileItems$0$co : (_percentileItems$ = percentileItems[0]) === null || _percentileItems$ === void 0 ? void 0 : (_percentileItems$$met = _percentileItems$.metadata) === null || _percentileItems$$met === void 0 ? void 0 : _percentileItems$$met.areaColor,
        index: percentileIndex,
        name: seriesNameFormatter((_percentileItems$2 = percentileItems[0]) === null || _percentileItems$2 === void 0 ? void 0 : (_percentileItems$2$me = _percentileItems$2.metadata) === null || _percentileItems$2$me === void 0 ? void 0 : _percentileItems$2$me.legendLabel),
        shape: "Bar",
        theme: theme
      })
    }, percentileIndex)]
  });
}

export { CustomLegend };
