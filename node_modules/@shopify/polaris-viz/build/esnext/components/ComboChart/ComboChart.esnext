import { usePolarisVizContext, DEFAULT_CHART_PROPS, InternalChartType } from '@shopify/polaris-viz-core';
import { flattenDataGroupToDataSeries } from '../../utilities/flattenDataGroupToDataSeries.esnext';
import { Chart } from './Chart.esnext';
import { formatDataForTooltip } from './utilities/formatDataForTooltip.esnext';
import { jsx } from 'react/jsx-runtime';
import { getXAxisOptionsWithDefaults } from '../../utilities/getAxisOptions.esnext';
import { normalizeData } from '../../utilities/normalizeData.esnext';
import { ChartContainer } from '../ChartContainer/ChartContainer.esnext';
import { TooltipContent } from '../TooltipContent/TooltipContent.esnext';

function ComboChart(props) {
  const {
    defaultTheme
  } = usePolarisVizContext();
  const {
    data,
    annotations = [],
    onError,
    id,
    isAnimated,
    renderTooltipContent,
    seriesNameFormatter = value => `${value}`,
    showLegend = true,
    theme = defaultTheme,
    xAxisOptions,
    renderLegendContent
  } = { ...DEFAULT_CHART_PROPS,
    ...props
  };
  const xAxisOptionsWithDefaults = getXAxisOptionsWithDefaults(xAxisOptions);
  const annotationsLookupTable = normalizeData(annotations, 'startKey');

  function renderTooltip(tooltipData) {
    if (renderTooltipContent != null) {
      return renderTooltipContent({ ...tooltipData,
        dataSeries: flattenDataGroupToDataSeries(data)
      });
    }

    const {
      title,
      formattedData
    } = formatDataForTooltip({
      data: tooltipData,
      xAxisOptions: xAxisOptionsWithDefaults
    });
    return /*#__PURE__*/jsx(TooltipContent, {
      data: formattedData,
      theme: theme,
      title: title
    });
  }

  return /*#__PURE__*/jsx(ChartContainer, {
    data: data,
    onError: onError,
    id: id,
    isAnimated: isAnimated,
    theme: theme,
    type: InternalChartType.Combo,
    children: /*#__PURE__*/jsx(Chart, {
      annotationsLookupTable: annotationsLookupTable,
      data: data,
      renderTooltipContent: renderTooltip,
      seriesNameFormatter: seriesNameFormatter,
      showLegend: showLegend,
      theme: theme,
      xAxisOptions: xAxisOptionsWithDefaults,
      renderLegendContent: renderLegendContent
    })
  });
}

export { ComboChart };
